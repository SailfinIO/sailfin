
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightASSIGNPLUS_ASSIGNMINUS_ASSIGNMULTIPLY_ASSIGNDIVIDE_ASSIGNMODULO_ASSIGNleftORleftANDnonassocEQNEQnonassocLTGTLEQGEQISleftPLUSMINUSleftMULTIPLYDIVIDEMODULOrightNOTAWAITrightUMINUSAMPERSAND AND ARROW AS ASSERT ASSIGN ASYNC AT AWAIT BREAK CASE CATCH COLON COMMA CONST CONTINUE DIVIDE DIVIDE_ASSIGN DOT ELSE ENUM EQ EXTENDS FALSE FATARROW FINALLY FN FOR FROM GEQ GT IDENTIFIER IF IMPLEMENTS IMPORT IN INTERFACE IS LBRACE LBRACKET LEQ LET LOOP LPAREN LT MATCH MINUS MINUS_ASSIGN MODULO MODULO_ASSIGN MULTIPLY MULTIPLY_ASSIGN MUT NEQ NOT NULL NUMBER OR PARALLEL PIPE PLUS PLUS_ASSIGN QUESTION RANGE RBRACE RBRACKET RETURN ROUTINE RPAREN SEMICOLON STRING STRUCT TEST THROW TRUE TRY TYPE WHILEprogram : program_itemsprogram_items : program_items program_itemprogram_items : program_itemprogram_item : import_statement\n| declarationimport_statement : IMPORT LBRACE import_list_opt RBRACE FROM STRING SEMICOLONimport_list_opt : import_list\n| emptyimport_list : import_list COMMA IDENTIFIERimport_list : IDENTIFIERdecorator_list : decorator_list decoratordecorator_list : decoratordecorator_list_opt : decorator_list\n| emptydecorator : AT qualified_name decorator_args_optdecorator_args_opt : LPAREN argument_list_opt RPAREN\n| emptyargument_list_opt : argument_list\n| emptyargument_list : argument_list COMMA expressionargument_list : expressionasync_opt : ASYNC\n| emptytype_parameters_opt : LT type_parameter_list GT\n| emptytype_parameter_list : type_parameter_list COMMA type_parametertype_parameter_list : type_parametertype_parameter : IDENTIFIER\n| IDENTIFIER EXTENDS typedeclaration : function_declaration\n| struct_declaration\n| enum_declaration\n| interface_declaration\n| type_alias_declaration\n| constant_declaration\n| variable_declaration\n| test_declarationfunction_declaration : decorator_list_opt async_opt FN IDENTIFIER type_parameters_opt LPAREN parameter_list_opt RPAREN return_type_opt blockparameter_list_opt : parameter_list\n| emptyparameter_list : parameter_list COMMA parameterparameter_list : parameterparameter : IDENTIFIER parameter_type_opt parameter_default_optparameter_type_opt : ARROW type\n| emptyparameter_default_opt : ASSIGN expression\n| emptyreturn_type_opt : ARROW type\n| emptytype_alias_declaration : TYPE IDENTIFIER type_parameters_opt ASSIGN type SEMICOLONstruct_declaration : STRUCT IDENTIFIER type_parameters_opt implements_opt LBRACE struct_member_list_opt RBRACEimplements_opt : IMPLEMENTS type_list\n| emptystruct_member_list_opt : struct_member_list\n| emptystruct_member_list : struct_member_list struct_memberstruct_member_list : struct_memberstruct_member : field_declaration\n| method_declarationfield_declaration : MUT IDENTIFIER ARROW type SEMICOLON\n| IDENTIFIER ARROW type SEMICOLONmethod_declaration : decorator_list_opt async_opt FN IDENTIFIER type_parameters_opt LPAREN parameter_list_opt RPAREN return_type_opt blockenum_declaration : ENUM IDENTIFIER type_parameters_opt LBRACE enum_variant_list_opt RBRACEenum_variant_list_opt : enum_variant_list maybe_trailing_comma\n| emptyenum_variant_list : enum_variant_list COMMA enum_variantenum_variant_list : enum_variantenum_variant : IDENTIFIER LBRACE enum_variant_fields_opt RBRACE\n| IDENTIFIERenum_variant_fields_opt : enum_variant_fields\n| emptyenum_variant_fields : enum_variant_fields field_declarationenum_variant_fields : field_declarationinterface_declaration : INTERFACE IDENTIFIER type_parameters_opt LBRACE interface_member_list_opt RBRACEinterface_member_list_opt : interface_member_list\n| emptyinterface_member_list : interface_member_list interface_memberinterface_member_list : interface_memberinterface_member : FN IDENTIFIER LPAREN parameter_list_opt RPAREN ARROW type SEMICOLONconstant_declaration : CONST IDENTIFIER type_annotation_opt ASSIGN expression SEMICOLONvariable_declaration : LET mut_opt IDENTIFIER type_annotation_opt initializer_opt SEMICOLONmut_opt : MUT\n| emptytype_annotation_opt : ARROW type\n| emptyinitializer_opt : ASSIGN expression\n| emptytest_declaration : TEST STRING blockmaybe_trailing_comma : COMMA\n| emptyblock : LBRACE statement_list_opt RBRACEstatement_list_opt : statement_list\n| emptystatement_list : statement_list statementstatement_list : statementstatement : variable_declaration\n| constant_declaration\n| function_declaration\n| struct_declaration\n| enum_declaration\n| interface_declaration\n| type_alias_declaration\n| test_declaration\n| if_statement\n| match_statement\n| match_case_statement\n| for_statement\n| while_statement\n| loop_statement\n| break_statement\n| continue_statement\n| return_statement\n| try_statement\n| throw_statement\n| assert_statement\n| routine_statement\n| expression_statementexpression_statement : expression SEMICOLONif_statement : IF condition block else_clause_optcondition : LPAREN expression RPARENcondition : expressionelse_clause_opt : ELSE if_statementelse_clause_opt : ELSE blockelse_clause_opt : emptymatch_statement : MATCH expression match_blockmatch_block : LBRACE match_case_list RBRACEmatch_case_list : CASE match_case_body match_case_list_tailmatch_case_list_tail : COMMA CASE match_case_body match_case_list_tailmatch_case_list_tail : COMMAmatch_case_list_tail : emptymatch_case_body : pattern match_guard_opt match_arrow match_bodymatch_case_statement : CASE pattern match_guard_opt match_arrow match_body optional_commaoptional_comma : COMMA\n| emptymatch_arrow : FATARROW\n| ARROWprimary_expression : MATCH expression match_blockmatch_guard_opt : IF expression\n| emptymatch_body : blockmatch_body : expressionfor_statement : FOR pattern IN expression blockwhile_statement : WHILE condition blockloop_statement : LOOP blockbreak_statement : BREAK SEMICOLONcontinue_statement : CONTINUE SEMICOLONreturn_statement : RETURN expression SEMICOLON\n| RETURN SEMICOLONtry_statement : TRY block catch_clause finally_clause_optcatch_clause : CATCH LPAREN IDENTIFIER catch_as_opt RPAREN blockcatch_clause : emptycatch_as_opt : AS pattern\n| emptyfinally_clause_opt : FINALLY block\n| emptythrow_statement : THROW expression SEMICOLONassert_statement : ASSERT expression SEMICOLONroutine_statement : ROUTINE routine_name_opt blockroutine_name_opt : STRING\n| emptyexpression : assignment_expressionassignment_expression : range_expression\n| postfix_expression assignment_operator assignment_expressionassignment_operator : ASSIGN\n| PLUS_ASSIGN\n| MINUS_ASSIGN\n| MULTIPLY_ASSIGN\n| DIVIDE_ASSIGN\n| MODULO_ASSIGNrange_expression : logical_or_expression RANGE logical_or_expressionrange_expression : logical_or_expressionlogical_or_expression : logical_or_expression OR logical_and_expressionlogical_or_expression : logical_and_expressionlogical_and_expression : logical_and_expression AND equality_expressionlogical_and_expression : equality_expressionequality_expression : equality_expression EQ relational_expression\n| equality_expression NEQ relational_expressionequality_expression : relational_expressionrelational_expression : relational_expression LT additive_expression\n| relational_expression GT additive_expression\n| relational_expression LEQ additive_expression\n| relational_expression GEQ additive_expressionrelational_expression : additive_expression IS typerelational_expression : additive_expressionadditive_expression : additive_expression PLUS multiplicative_expression\n| additive_expression MINUS multiplicative_expressionadditive_expression : multiplicative_expressionmultiplicative_expression : multiplicative_expression MULTIPLY unary_expression\n| multiplicative_expression DIVIDE unary_expression\n| multiplicative_expression MODULO unary_expressionmultiplicative_expression : unary_expressionunary_expression : NOT unary_expressionunary_expression : MINUS unary_expression %prec UMINUSunary_expression : AWAIT unary_expressionunary_expression : postfix_expressionpostfix_expression : postfix_expression LPAREN argument_list_opt RPARENpostfix_expression : postfix_expression DOT IDENTIFIERpostfix_expression : postfix_expression LBRACKET expression RBRACKETpostfix_expression : primary_expressionprimary_expression : NUMBERprimary_expression : STRINGprimary_expression : TRUEprimary_expression : FALSEprimary_expression : NULLprimary_expression : IDENTIFIERprimary_expression : LPAREN expression RPARENprimary_expression : LBRACKET expression_list_opt RBRACKETexpression_list_opt : expression_list\n| emptyexpression_list : expression_list COMMA expressionexpression_list : expressionprimary_expression : LBRACE object_field_list_opt RBRACEprimary_expression : IDENTIFIER LBRACE object_field_list_opt RBRACEobject_field_list_opt : object_field_list maybe_trailing_comma\n| emptyobject_field_list : object_field_list COMMA object_fieldobject_field_list : object_fieldobject_field : IDENTIFIER COLON expressionprimary_expression : FN LPAREN parameter_list_opt RPAREN return_type_opt blockprimary_expression : ASYNC blockprimary_expression : PARALLEL LBRACKET argument_list_opt RBRACKETtype : union_typeunion_type : intersection_typeunion_type : union_type PIPE intersection_typeintersection_type : primary_typeintersection_type : intersection_type AMPERSAND primary_typeprimary_type : qualified_name type_arguments_optprimary_type : primary_type LBRACKET RBRACKETprimary_type : LBRACKET type_list RBRACKETprimary_type : primary_type QUESTIONprimary_type : LPAREN type RPARENtype_arguments_opt : LT type_list GT\n| emptytype_list : type_list COMMA typetype_list : typepattern : IDENTIFIERpattern : NUMBERpattern : STRINGpattern : TRUEpattern : FALSEpattern : NULLpattern : MINUS NUMBERpattern : qualified_name LBRACE pattern_field_list_opt RBRACEpattern_field_list_opt : pattern_field_list maybe_trailing_comma\n| emptypattern_field_list : pattern_field_list COMMA pattern_fieldpattern_field_list : pattern_fieldpattern_field : IDENTIFIER COLON patternpattern_field : IDENTIFIERqualified_name : IDENTIFIER\n| qualified_name DOT IDENTIFIERempty :'
    
_lr_action_items = {'IMPORT':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,59,196,281,285,288,289,296,351,354,451,],[6,6,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-88,-91,-63,-74,-50,-80,-81,-6,-51,-38,]),'STRUCT':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[16,16,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,16,-222,-223,-225,-252,16,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,16,-142,-154,-219,-132,-133,-134,-38,-150,]),'ENUM':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[17,17,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,17,-222,-223,-225,-252,17,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,17,-142,-154,-219,-132,-133,-134,-38,-150,]),'INTERFACE':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[18,18,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,18,-222,-223,-225,-252,18,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,18,-142,-154,-219,-132,-133,-134,-38,-150,]),'TYPE':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[19,19,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,19,-222,-223,-225,-252,19,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,19,-142,-154,-219,-132,-133,-134,-38,-150,]),'CONST':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[20,20,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,20,-222,-223,-225,-252,20,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,20,-142,-154,-219,-132,-133,-134,-38,-150,]),'LET':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[21,21,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,21,-222,-223,-225,-252,21,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,21,-142,-154,-219,-132,-133,-134,-38,-150,]),'TEST':([0,2,3,4,5,7,8,9,10,11,12,13,14,27,43,59,60,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,434,441,442,443,451,463,],[22,22,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-2,-250,-88,22,-222,-223,-225,-252,22,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,22,-142,-154,-219,-132,-133,-134,-38,-150,]),'ASYNC':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,23,24,25,27,41,42,43,59,60,61,63,64,77,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,118,119,122,126,128,129,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,157,161,182,183,185,189,196,197,199,203,217,218,219,221,222,228,229,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,270,271,272,273,274,276,281,285,288,289,290,291,292,294,295,296,298,301,308,309,311,314,318,319,320,321,323,324,325,326,327,329,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,355,365,368,374,376,380,381,382,390,392,394,395,397,410,413,414,415,418,419,420,421,426,427,430,434,441,442,443,444,451,452,456,463,469,],[-252,-252,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,30,-13,-14,-12,-2,-11,-252,-250,-88,142,-15,142,-17,142,-222,-223,-225,-252,142,-14,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,142,-201,142,142,142,142,142,142,-161,-162,-195,-171,142,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,142,-191,142,142,-251,142,-252,-230,-227,-233,142,-91,-94,-118,142,-144,-145,-146,-148,-252,142,142,142,-164,-165,-166,-167,-168,-169,142,142,142,-220,142,142,142,142,142,142,142,142,142,142,142,142,-193,-195,-192,-194,-16,142,-252,-14,-57,-58,-59,30,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,142,-206,-252,-125,142,142,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,142,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-56,-232,-213,-119,-124,142,-135,-136,-149,-155,-196,-198,-221,142,-122,-123,-126,-252,-140,-141,142,-142,-154,-61,-219,-132,-133,-134,-14,-38,-60,142,-150,-62,]),'FN':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,23,24,25,27,29,30,31,41,42,43,59,60,61,63,64,75,77,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,118,119,122,126,128,129,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,150,151,152,157,161,173,175,182,183,185,189,196,197,199,203,217,218,219,221,222,228,229,231,232,233,234,235,236,237,238,239,244,245,246,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,270,271,272,273,274,276,281,285,286,288,289,290,291,292,294,295,296,298,301,308,309,311,314,318,319,320,321,323,324,325,326,327,329,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,355,357,365,368,374,376,380,381,382,390,392,394,395,397,410,413,414,415,418,419,420,421,426,427,430,434,441,442,443,444,451,452,456,463,465,469,],[-252,-252,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,-252,-13,-14,-12,-2,48,-22,-23,-11,-252,-250,-88,115,-15,115,-17,176,115,-222,-223,-225,-252,115,-14,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,115,-201,115,115,115,115,115,115,-161,-162,-195,-171,115,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,115,-191,115,115,-251,115,-252,176,-78,-230,-227,-233,115,-91,-94,-118,115,-144,-145,-146,-148,-252,115,115,115,-164,-165,-166,-167,-168,-169,115,115,115,-220,115,115,115,115,115,115,115,115,115,115,115,115,-193,-195,-192,-194,-16,115,-252,-14,-57,-58,-59,-252,-63,-74,-77,-50,-80,-224,-226,-228,-229,-231,-81,-212,115,-206,-252,-125,115,115,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,115,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-56,401,-232,-213,-119,-124,115,-135,-136,-149,-155,-196,-198,-221,115,-122,-123,-126,-252,-140,-141,115,-142,-154,-61,-219,-132,-133,-134,-14,-38,-60,115,-150,-79,-62,]),'AT':([0,2,3,4,5,7,8,9,10,11,12,13,14,23,25,27,41,42,43,59,60,61,64,79,80,81,82,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,131,132,133,134,136,137,138,139,140,141,144,145,146,147,149,152,161,182,183,185,196,197,199,217,218,219,221,222,245,259,260,261,262,263,270,272,273,274,281,285,288,289,290,291,292,294,295,296,298,308,309,311,319,320,321,323,324,325,326,327,329,331,332,333,335,337,338,339,340,341,342,343,344,345,346,347,348,350,351,354,355,365,368,374,376,390,392,394,395,397,413,414,415,418,419,420,421,426,427,430,434,441,442,443,451,452,463,469,],[26,26,-3,-4,-5,-30,-31,-32,-33,-34,-35,-36,-37,26,-12,-2,-11,-252,-250,-88,26,-15,-17,-222,-223,-225,-252,26,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-205,-201,-161,-162,-195,-171,-199,-173,-200,-202,-203,-204,-175,-178,-184,-187,-191,-251,26,-230,-227,-233,-91,-94,-118,-144,-145,-146,-148,-252,-220,-193,-195,-192,-194,-16,26,-57,-58,-59,-63,-74,-50,-80,-224,-226,-228,-229,-231,-81,-212,-206,-252,-125,-143,-147,-252,-151,-156,-157,-158,-163,-197,-170,-172,-207,-174,-176,-177,-179,-180,-181,-182,-183,-185,-186,-188,-189,-190,-137,-6,-51,-56,-232,-213,-119,-124,-149,-155,-196,-198,-221,-122,-123,-126,-252,-140,-141,26,-142,-154,-61,-219,-132,-133,-134,-38,-60,-150,-62,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_items':([0,],[2,]),'program_item':([0,2,],[3,27,]),'import_statement':([0,2,],[4,4,]),'declaration':([0,2,],[5,5,]),'function_declaration':([0,2,60,88,421,],[7,7,93,93,93,]),'struct_declaration':([0,2,60,88,421,],[8,8,94,94,94,]),'enum_declaration':([0,2,60,88,421,],[9,9,95,95,95,]),'interface_declaration':([0,2,60,88,421,],[10,10,96,96,96,]),'type_alias_declaration':([0,2,60,88,421,],[11,11,97,97,97,]),'constant_declaration':([0,2,60,88,421,],[12,12,92,92,92,]),'variable_declaration':([0,2,60,88,421,],[13,13,91,91,91,]),'test_declaration':([0,2,60,88,421,],[14,14,98,98,98,]),'decorator_list_opt':([0,2,60,88,161,270,421,],[15,15,15,15,276,276,15,]),'decorator_list':([0,2,60,88,161,270,421,],[23,23,23,23,23,23,23,]),'empty':([0,2,15,21,28,32,33,34,35,36,42,49,58,60,63,67,74,75,82,85,86,88,130,135,161,169,192,198,200,206,222,229,246,267,270,276,280,307,309,317,321,364,369,371,385,398,416,417,418,421,428,432,459,461,467,],[24,24,31,39,46,51,51,51,51,57,64,70,57,89,155,51,170,174,185,190,193,24,227,242,271,284,284,193,305,315,323,155,155,305,24,31,361,373,376,386,392,305,407,411,284,407,439,315,443,444,450,51,305,439,407,]),'decorator':([0,2,23,60,88,161,270,421,],[25,25,41,25,25,25,25,25,]),'async_opt':([15,276,],[29,357,]),'mut_opt':([21,],[37,]),'qualified_name':([26,56,69,76,83,84,120,121,166,179,180,184,253,277,353,372,379,400,406,425,449,454,455,],[42,82,82,82,82,82,214,214,82,82,82,82,82,82,82,82,214,82,82,214,214,82,214,]),'import_list_opt':([28,],[44,]),'import_list':([28,],[45,]),'type_parameters_opt':([32,33,34,35,67,432,],[49,52,53,54,160,453,]),'type_annotation_opt':([36,58,],[55,85,]),'block':([40,123,127,142,202,216,225,375,380,389,391,405,429,456,457,468,],[59,217,222,245,309,319,326,414,419,426,427,434,451,419,463,469,]),'decorator_args_opt':([42,],[61,]),'implements_opt':([49,],[68,]),'type_parameter_list':([50,],[71,]),'type_parameter':([50,165,],[72,278,]),'type':([56,69,76,83,84,166,184,253,277,353,372,400,406,454,],[78,163,177,163,187,279,163,343,358,399,412,431,435,460,]),'union_type':([56,69,76,83,84,166,184,253,277,353,372,400,406,454,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'intersection_type':([56,69,76,83,84,166,179,184,253,277,353,372,400,406,454,],[80,80,80,80,80,80,290,80,80,80,80,80,80,80,80,]),'primary_type':([56,69,76,83,84,166,179,180,184,253,277,353,372,400,406,454,],[81,81,81,81,81,81,81,291,81,81,81,81,81,81,81,81,]),'statement_list_opt':([60,421,],[87,87,]),'statement_list':([60,421,],[88,88,]),'statement':([60,88,421,],[90,197,90,]),'if_statement':([60,88,375,421,],[99,99,413,99,]),'match_statement':([60,88,421,],[100,100,100,]),'match_case_statement':([60,88,421,],[101,101,101,]),'for_statement':([60,88,421,],[102,102,102,]),'while_statement':([60,88,421,],[103,103,103,]),'loop_statement':([60,88,421,],[104,104,104,]),'break_statement':([60,88,421,],[105,105,105,]),'continue_statement':([60,88,421,],[106,106,106,]),'return_statement':([60,88,421,],[107,107,107,]),'try_statement':([60,88,421,],[108,108,108,]),'throw_statement':([60,88,421,],[109,109,109,]),'assert_statement':([60,88,421,],[110,110,110,]),'routine_statement':([60,88,421,],[111,111,111,]),'expression_statement':([60,88,421,],[112,112,112,]),'expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,229,231,246,264,301,314,318,334,380,410,421,456,],[114,156,178,114,201,204,205,204,220,223,224,243,265,297,310,156,330,156,349,367,383,389,396,420,436,114,420,]),'assignment_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,246,264,301,314,318,334,380,410,421,456,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,327,131,131,131,131,131,131,131,131,131,131,131,131,]),'range_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,246,264,301,314,318,334,380,410,421,456,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'postfix_expression':([60,63,77,88,116,118,119,122,126,128,129,135,148,150,151,157,189,203,228,229,231,238,239,244,246,247,248,249,250,251,252,254,255,256,257,258,264,301,314,318,334,380,410,421,456,],[133,133,133,133,133,133,133,133,133,133,133,133,260,260,260,133,133,133,133,133,133,260,260,260,133,260,260,260,260,260,260,260,260,260,260,260,133,133,133,133,133,133,133,133,133,]),'logical_or_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,238,246,264,301,314,318,334,380,410,421,456,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,331,134,134,134,134,134,134,134,134,134,134,]),'primary_expression':([60,63,77,88,116,118,119,122,126,128,129,135,148,150,151,157,189,203,228,229,231,238,239,244,246,247,248,249,250,251,252,254,255,256,257,258,264,301,314,318,334,380,410,421,456,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'logical_and_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,238,239,246,264,301,314,318,334,380,410,421,456,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,332,137,137,137,137,137,137,137,137,137,137,]),'equality_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,238,239,244,246,264,301,314,318,334,380,410,421,456,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,335,144,144,144,144,144,144,144,144,144,144,]),'relational_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,238,239,244,246,247,248,264,301,314,318,334,380,410,421,456,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,337,338,145,145,145,145,145,145,145,145,145,]),'additive_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,238,239,244,246,247,248,249,250,251,252,264,301,314,318,334,380,410,421,456,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,339,340,341,342,146,146,146,146,146,146,146,146,146,]),'multiplicative_expression':([60,63,77,88,116,118,119,122,126,128,129,135,157,189,203,228,229,231,238,239,244,246,247,248,249,250,251,252,254,255,264,301,314,318,334,380,410,421,456,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,344,345,147,147,147,147,147,147,147,147,147,]),'unary_expression':([60,63,77,88,116,118,119,122,126,128,129,135,148,150,151,157,189,203,228,229,231,238,239,244,246,247,248,249,250,251,252,254,255,256,257,258,264,301,314,318,334,380,410,421,456,],[149,149,149,149,149,149,149,149,149,149,149,149,259,261,262,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,346,347,348,149,149,149,149,149,149,149,149,149,]),'argument_list_opt':([63,229,246,],[153,328,336,]),'argument_list':([63,229,246,],[154,154,154,]),'type_list':([69,83,184,],[162,186,293,]),'enum_variant_list_opt':([74,],[168,]),'enum_variant_list':([74,],[169,]),'enum_variant':([74,283,],[171,363,]),'interface_member_list_opt':([75,],[172,]),'interface_member_list':([75,],[173,]),'interface_member':([75,173,],[175,286,]),'type_arguments_opt':([82,],[183,]),'initializer_opt':([85,],[188,]),'object_field_list_opt':([86,198,421,],[191,302,191,]),'object_field_list':([86,198,421,],[192,192,192,]),'object_field':([86,198,300,421,],[194,194,366,194,]),'condition':([118,122,],[202,216,]),'pattern':([120,121,379,425,449,455,],[206,215,417,447,458,417,]),'routine_name_opt':([130,],[225,]),'assignment_operator':([133,],[228,]),'expression_list_opt':([135,],[240,]),'expression_list':([135,],[241,]),'struct_member_list_opt':([161,],[269,]),'struct_member_list':([161,],[270,]),'struct_member':([161,270,],[272,355,]),'field_declaration':([161,270,280,360,],[273,273,362,403,]),'method_declaration':([161,270,],[274,274,]),'maybe_trailing_comma':([169,192,385,],[282,299,423,]),'parameter_list_opt':([200,267,364,459,],[303,352,404,464,]),'parameter_list':([200,267,364,459,],[304,304,304,304,]),'parameter':([200,267,364,370,459,],[306,306,306,408,306,]),'match_block':([205,265,],[311,350,]),'match_guard_opt':([206,417,],[313,440,]),'catch_clause':([222,],[321,]),'enum_variant_fields_opt':([280,],[359,]),'enum_variant_fields':([280,],[360,]),'parameter_type_opt':([307,],[371,]),'else_clause_opt':([309,],[374,]),'match_case_list':([312,],[378,]),'match_arrow':([313,440,],[380,456,]),'pattern_field_list_opt':([317,],[384,]),'pattern_field_list':([317,],[385,]),'pattern_field':([317,424,],[387,446,]),'finally_clause_opt':([321,],[390,]),'return_type_opt':([369,398,467,],[405,429,468,]),'parameter_default_opt':([371,],[409,]),'match_case_body':([379,455,],[416,461,]),'match_body':([380,456,],[418,462,]),'match_case_list_tail':([416,461,],[437,466,]),'optional_comma':([418,],[441,]),'catch_as_opt':([428,],[448,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_items','program',1,'p_program','parser.py',97),
  ('program_items -> program_items program_item','program_items',2,'p_program_items_multiple','parser.py',102),
  ('program_items -> program_item','program_items',1,'p_program_items_single','parser.py',107),
  ('program_item -> import_statement','program_item',1,'p_program_item','parser.py',112),
  ('program_item -> declaration','program_item',1,'p_program_item','parser.py',113),
  ('import_statement -> IMPORT LBRACE import_list_opt RBRACE FROM STRING SEMICOLON','import_statement',7,'p_import_statement','parser.py',123),
  ('import_list_opt -> import_list','import_list_opt',1,'p_import_list_opt','parser.py',129),
  ('import_list_opt -> empty','import_list_opt',1,'p_import_list_opt','parser.py',130),
  ('import_list -> import_list COMMA IDENTIFIER','import_list',3,'p_import_list_multiple','parser.py',135),
  ('import_list -> IDENTIFIER','import_list',1,'p_import_list_single','parser.py',140),
  ('decorator_list -> decorator_list decorator','decorator_list',2,'p_decorator_list','parser.py',150),
  ('decorator_list -> decorator','decorator_list',1,'p_decorator_list_single','parser.py',155),
  ('decorator_list_opt -> decorator_list','decorator_list_opt',1,'p_decorator_list_opt','parser.py',160),
  ('decorator_list_opt -> empty','decorator_list_opt',1,'p_decorator_list_opt','parser.py',161),
  ('decorator -> AT qualified_name decorator_args_opt','decorator',3,'p_decorator','parser.py',166),
  ('decorator_args_opt -> LPAREN argument_list_opt RPAREN','decorator_args_opt',3,'p_decorator_args_opt','parser.py',172),
  ('decorator_args_opt -> empty','decorator_args_opt',1,'p_decorator_args_opt','parser.py',173),
  ('argument_list_opt -> argument_list','argument_list_opt',1,'p_argument_list_opt','parser.py',181),
  ('argument_list_opt -> empty','argument_list_opt',1,'p_argument_list_opt','parser.py',182),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list_multiple','parser.py',187),
  ('argument_list -> expression','argument_list',1,'p_argument_list_single','parser.py',192),
  ('async_opt -> ASYNC','async_opt',1,'p_async_opt','parser.py',197),
  ('async_opt -> empty','async_opt',1,'p_async_opt','parser.py',198),
  ('type_parameters_opt -> LT type_parameter_list GT','type_parameters_opt',3,'p_type_parameters_opt','parser.py',203),
  ('type_parameters_opt -> empty','type_parameters_opt',1,'p_type_parameters_opt','parser.py',204),
  ('type_parameter_list -> type_parameter_list COMMA type_parameter','type_parameter_list',3,'p_type_parameter_list_multiple','parser.py',212),
  ('type_parameter_list -> type_parameter','type_parameter_list',1,'p_type_parameter_list_single','parser.py',217),
  ('type_parameter -> IDENTIFIER','type_parameter',1,'p_type_parameter','parser.py',222),
  ('type_parameter -> IDENTIFIER EXTENDS type','type_parameter',3,'p_type_parameter','parser.py',223),
  ('declaration -> function_declaration','declaration',1,'p_declaration','parser.py',236),
  ('declaration -> struct_declaration','declaration',1,'p_declaration','parser.py',237),
  ('declaration -> enum_declaration','declaration',1,'p_declaration','parser.py',238),
  ('declaration -> interface_declaration','declaration',1,'p_declaration','parser.py',239),
  ('declaration -> type_alias_declaration','declaration',1,'p_declaration','parser.py',240),
  ('declaration -> constant_declaration','declaration',1,'p_declaration','parser.py',241),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','parser.py',242),
  ('declaration -> test_declaration','declaration',1,'p_declaration','parser.py',243),
  ('function_declaration -> decorator_list_opt async_opt FN IDENTIFIER type_parameters_opt LPAREN parameter_list_opt RPAREN return_type_opt block','function_declaration',10,'p_function_declaration','parser.py',248),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',264),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',265),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list_multiple','parser.py',270),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list_single','parser.py',275),
  ('parameter -> IDENTIFIER parameter_type_opt parameter_default_opt','parameter',3,'p_parameter','parser.py',280),
  ('parameter_type_opt -> ARROW type','parameter_type_opt',2,'p_parameter_type_opt','parser.py',285),
  ('parameter_type_opt -> empty','parameter_type_opt',1,'p_parameter_type_opt','parser.py',286),
  ('parameter_default_opt -> ASSIGN expression','parameter_default_opt',2,'p_parameter_default_opt','parser.py',291),
  ('parameter_default_opt -> empty','parameter_default_opt',1,'p_parameter_default_opt','parser.py',292),
  ('return_type_opt -> ARROW type','return_type_opt',2,'p_return_type_opt','parser.py',297),
  ('return_type_opt -> empty','return_type_opt',1,'p_return_type_opt','parser.py',298),
  ('type_alias_declaration -> TYPE IDENTIFIER type_parameters_opt ASSIGN type SEMICOLON','type_alias_declaration',6,'p_type_alias_declaration','parser.py',303),
  ('struct_declaration -> STRUCT IDENTIFIER type_parameters_opt implements_opt LBRACE struct_member_list_opt RBRACE','struct_declaration',7,'p_struct_declaration','parser.py',308),
  ('implements_opt -> IMPLEMENTS type_list','implements_opt',2,'p_implements_opt','parser.py',318),
  ('implements_opt -> empty','implements_opt',1,'p_implements_opt','parser.py',319),
  ('struct_member_list_opt -> struct_member_list','struct_member_list_opt',1,'p_struct_member_list_opt','parser.py',324),
  ('struct_member_list_opt -> empty','struct_member_list_opt',1,'p_struct_member_list_opt','parser.py',325),
  ('struct_member_list -> struct_member_list struct_member','struct_member_list',2,'p_struct_member_list_multiple','parser.py',330),
  ('struct_member_list -> struct_member','struct_member_list',1,'p_struct_member_list_single','parser.py',335),
  ('struct_member -> field_declaration','struct_member',1,'p_struct_member','parser.py',340),
  ('struct_member -> method_declaration','struct_member',1,'p_struct_member','parser.py',341),
  ('field_declaration -> MUT IDENTIFIER ARROW type SEMICOLON','field_declaration',5,'p_field_declaration','parser.py',346),
  ('field_declaration -> IDENTIFIER ARROW type SEMICOLON','field_declaration',4,'p_field_declaration','parser.py',347),
  ('method_declaration -> decorator_list_opt async_opt FN IDENTIFIER type_parameters_opt LPAREN parameter_list_opt RPAREN return_type_opt block','method_declaration',10,'p_method_declaration','parser.py',355),
  ('enum_declaration -> ENUM IDENTIFIER type_parameters_opt LBRACE enum_variant_list_opt RBRACE','enum_declaration',6,'p_enum_declaration','parser.py',368),
  ('enum_variant_list_opt -> enum_variant_list maybe_trailing_comma','enum_variant_list_opt',2,'p_enum_variant_list_opt','parser.py',373),
  ('enum_variant_list_opt -> empty','enum_variant_list_opt',1,'p_enum_variant_list_opt','parser.py',374),
  ('enum_variant_list -> enum_variant_list COMMA enum_variant','enum_variant_list',3,'p_enum_variant_list_multiple','parser.py',382),
  ('enum_variant_list -> enum_variant','enum_variant_list',1,'p_enum_variant_list_single','parser.py',387),
  ('enum_variant -> IDENTIFIER LBRACE enum_variant_fields_opt RBRACE','enum_variant',4,'p_enum_variant','parser.py',392),
  ('enum_variant -> IDENTIFIER','enum_variant',1,'p_enum_variant','parser.py',393),
  ('enum_variant_fields_opt -> enum_variant_fields','enum_variant_fields_opt',1,'p_enum_variant_fields_opt','parser.py',401),
  ('enum_variant_fields_opt -> empty','enum_variant_fields_opt',1,'p_enum_variant_fields_opt','parser.py',402),
  ('enum_variant_fields -> enum_variant_fields field_declaration','enum_variant_fields',2,'p_enum_variant_fields_multiple','parser.py',407),
  ('enum_variant_fields -> field_declaration','enum_variant_fields',1,'p_enum_variant_fields_single','parser.py',412),
  ('interface_declaration -> INTERFACE IDENTIFIER type_parameters_opt LBRACE interface_member_list_opt RBRACE','interface_declaration',6,'p_interface_declaration','parser.py',417),
  ('interface_member_list_opt -> interface_member_list','interface_member_list_opt',1,'p_interface_member_list_opt','parser.py',422),
  ('interface_member_list_opt -> empty','interface_member_list_opt',1,'p_interface_member_list_opt','parser.py',423),
  ('interface_member_list -> interface_member_list interface_member','interface_member_list',2,'p_interface_member_list_multiple','parser.py',428),
  ('interface_member_list -> interface_member','interface_member_list',1,'p_interface_member_list_single','parser.py',433),
  ('interface_member -> FN IDENTIFIER LPAREN parameter_list_opt RPAREN ARROW type SEMICOLON','interface_member',8,'p_interface_member','parser.py',438),
  ('constant_declaration -> CONST IDENTIFIER type_annotation_opt ASSIGN expression SEMICOLON','constant_declaration',6,'p_constant_declaration','parser.py',443),
  ('variable_declaration -> LET mut_opt IDENTIFIER type_annotation_opt initializer_opt SEMICOLON','variable_declaration',6,'p_variable_declaration','parser.py',448),
  ('mut_opt -> MUT','mut_opt',1,'p_mut_opt','parser.py',458),
  ('mut_opt -> empty','mut_opt',1,'p_mut_opt','parser.py',459),
  ('type_annotation_opt -> ARROW type','type_annotation_opt',2,'p_type_annotation_opt','parser.py',464),
  ('type_annotation_opt -> empty','type_annotation_opt',1,'p_type_annotation_opt','parser.py',465),
  ('initializer_opt -> ASSIGN expression','initializer_opt',2,'p_initializer_opt','parser.py',470),
  ('initializer_opt -> empty','initializer_opt',1,'p_initializer_opt','parser.py',471),
  ('test_declaration -> TEST STRING block','test_declaration',3,'p_test_declaration','parser.py',476),
  ('maybe_trailing_comma -> COMMA','maybe_trailing_comma',1,'p_maybe_trailing_comma','parser.py',481),
  ('maybe_trailing_comma -> empty','maybe_trailing_comma',1,'p_maybe_trailing_comma','parser.py',482),
  ('block -> LBRACE statement_list_opt RBRACE','block',3,'p_block','parser.py',492),
  ('statement_list_opt -> statement_list','statement_list_opt',1,'p_statement_list_opt','parser.py',497),
  ('statement_list_opt -> empty','statement_list_opt',1,'p_statement_list_opt','parser.py',498),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','parser.py',503),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','parser.py',508),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',513),
  ('statement -> constant_declaration','statement',1,'p_statement','parser.py',514),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',515),
  ('statement -> struct_declaration','statement',1,'p_statement','parser.py',516),
  ('statement -> enum_declaration','statement',1,'p_statement','parser.py',517),
  ('statement -> interface_declaration','statement',1,'p_statement','parser.py',518),
  ('statement -> type_alias_declaration','statement',1,'p_statement','parser.py',519),
  ('statement -> test_declaration','statement',1,'p_statement','parser.py',520),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',521),
  ('statement -> match_statement','statement',1,'p_statement','parser.py',522),
  ('statement -> match_case_statement','statement',1,'p_statement','parser.py',523),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',524),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',525),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',526),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',527),
  ('statement -> continue_statement','statement',1,'p_statement','parser.py',528),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',529),
  ('statement -> try_statement','statement',1,'p_statement','parser.py',530),
  ('statement -> throw_statement','statement',1,'p_statement','parser.py',531),
  ('statement -> assert_statement','statement',1,'p_statement','parser.py',532),
  ('statement -> routine_statement','statement',1,'p_statement','parser.py',533),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',534),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',539),
  ('if_statement -> IF condition block else_clause_opt','if_statement',4,'p_if_statement','parser.py',549),
  ('condition -> LPAREN expression RPAREN','condition',3,'p_condition_paren','parser.py',554),
  ('condition -> expression','condition',1,'p_condition_simple','parser.py',559),
  ('else_clause_opt -> ELSE if_statement','else_clause_opt',2,'p_else_clause_if','parser.py',564),
  ('else_clause_opt -> ELSE block','else_clause_opt',2,'p_else_clause_block','parser.py',569),
  ('else_clause_opt -> empty','else_clause_opt',1,'p_else_clause_empty','parser.py',574),
  ('match_statement -> MATCH expression match_block','match_statement',3,'p_match_statement','parser.py',579),
  ('match_block -> LBRACE match_case_list RBRACE','match_block',3,'p_match_block','parser.py',584),
  ('match_case_list -> CASE match_case_body match_case_list_tail','match_case_list',3,'p_match_case_list','parser.py',589),
  ('match_case_list_tail -> COMMA CASE match_case_body match_case_list_tail','match_case_list_tail',4,'p_match_case_list_tail_more','parser.py',596),
  ('match_case_list_tail -> COMMA','match_case_list_tail',1,'p_match_case_list_tail_trailing','parser.py',602),
  ('match_case_list_tail -> empty','match_case_list_tail',1,'p_match_case_list_tail_empty','parser.py',607),
  ('match_case_body -> pattern match_guard_opt match_arrow match_body','match_case_body',4,'p_match_case_body','parser.py',612),
  ('match_case_statement -> CASE pattern match_guard_opt match_arrow match_body optional_comma','match_case_statement',6,'p_match_case_statement','parser.py',617),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_comma','parser.py',622),
  ('optional_comma -> empty','optional_comma',1,'p_optional_comma','parser.py',623),
  ('match_arrow -> FATARROW','match_arrow',1,'p_match_arrow','parser.py',628),
  ('match_arrow -> ARROW','match_arrow',1,'p_match_arrow','parser.py',629),
  ('primary_expression -> MATCH expression match_block','primary_expression',3,'p_primary_match_expression','parser.py',634),
  ('match_guard_opt -> IF expression','match_guard_opt',2,'p_match_guard_opt','parser.py',639),
  ('match_guard_opt -> empty','match_guard_opt',1,'p_match_guard_opt','parser.py',640),
  ('match_body -> block','match_body',1,'p_match_body_block','parser.py',645),
  ('match_body -> expression','match_body',1,'p_match_body_expression','parser.py',650),
  ('for_statement -> FOR pattern IN expression block','for_statement',5,'p_for_statement','parser.py',655),
  ('while_statement -> WHILE condition block','while_statement',3,'p_while_statement','parser.py',660),
  ('loop_statement -> LOOP block','loop_statement',2,'p_loop_statement','parser.py',665),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','parser.py',670),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','parser.py',675),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',680),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','parser.py',681),
  ('try_statement -> TRY block catch_clause finally_clause_opt','try_statement',4,'p_try_statement','parser.py',689),
  ('catch_clause -> CATCH LPAREN IDENTIFIER catch_as_opt RPAREN block','catch_clause',6,'p_catch_clause','parser.py',694),
  ('catch_clause -> empty','catch_clause',1,'p_catch_clause_empty','parser.py',702),
  ('catch_as_opt -> AS pattern','catch_as_opt',2,'p_catch_as_opt','parser.py',707),
  ('catch_as_opt -> empty','catch_as_opt',1,'p_catch_as_opt','parser.py',708),
  ('finally_clause_opt -> FINALLY block','finally_clause_opt',2,'p_finally_clause_opt','parser.py',713),
  ('finally_clause_opt -> empty','finally_clause_opt',1,'p_finally_clause_opt','parser.py',714),
  ('throw_statement -> THROW expression SEMICOLON','throw_statement',3,'p_throw_statement','parser.py',719),
  ('assert_statement -> ASSERT expression SEMICOLON','assert_statement',3,'p_assert_statement','parser.py',724),
  ('routine_statement -> ROUTINE routine_name_opt block','routine_statement',3,'p_routine_statement','parser.py',729),
  ('routine_name_opt -> STRING','routine_name_opt',1,'p_routine_name_opt','parser.py',734),
  ('routine_name_opt -> empty','routine_name_opt',1,'p_routine_name_opt','parser.py',735),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',745),
  ('assignment_expression -> range_expression','assignment_expression',1,'p_assignment_expression','parser.py',750),
  ('assignment_expression -> postfix_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',751),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',760),
  ('assignment_operator -> PLUS_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',761),
  ('assignment_operator -> MINUS_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',762),
  ('assignment_operator -> MULTIPLY_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',763),
  ('assignment_operator -> DIVIDE_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',764),
  ('assignment_operator -> MODULO_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',765),
  ('range_expression -> logical_or_expression RANGE logical_or_expression','range_expression',3,'p_range_expression_binary','parser.py',770),
  ('range_expression -> logical_or_expression','range_expression',1,'p_range_expression_single','parser.py',775),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression_binary','parser.py',780),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_single','parser.py',785),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression_binary','parser.py',790),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression_single','parser.py',795),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_binary','parser.py',800),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression_binary','parser.py',801),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_single','parser.py',806),
  ('relational_expression -> relational_expression LT additive_expression','relational_expression',3,'p_relational_expression_binary','parser.py',811),
  ('relational_expression -> relational_expression GT additive_expression','relational_expression',3,'p_relational_expression_binary','parser.py',812),
  ('relational_expression -> relational_expression LEQ additive_expression','relational_expression',3,'p_relational_expression_binary','parser.py',813),
  ('relational_expression -> relational_expression GEQ additive_expression','relational_expression',3,'p_relational_expression_binary','parser.py',814),
  ('relational_expression -> additive_expression IS type','relational_expression',3,'p_relational_expression_is','parser.py',819),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression_single','parser.py',824),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_binary','parser.py',829),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_binary','parser.py',830),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_single','parser.py',835),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY unary_expression','multiplicative_expression',3,'p_multiplicative_expression_binary','parser.py',840),
  ('multiplicative_expression -> multiplicative_expression DIVIDE unary_expression','multiplicative_expression',3,'p_multiplicative_expression_binary','parser.py',841),
  ('multiplicative_expression -> multiplicative_expression MODULO unary_expression','multiplicative_expression',3,'p_multiplicative_expression_binary','parser.py',842),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression_single','parser.py',847),
  ('unary_expression -> NOT unary_expression','unary_expression',2,'p_unary_expression_not','parser.py',852),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression_negative','parser.py',857),
  ('unary_expression -> AWAIT unary_expression','unary_expression',2,'p_unary_expression_await','parser.py',862),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_postfix','parser.py',867),
  ('postfix_expression -> postfix_expression LPAREN argument_list_opt RPAREN','postfix_expression',4,'p_postfix_expression_call','parser.py',872),
  ('postfix_expression -> postfix_expression DOT IDENTIFIER','postfix_expression',3,'p_postfix_expression_member','parser.py',877),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_index','parser.py',882),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_primary','parser.py',887),
  ('primary_expression -> NUMBER','primary_expression',1,'p_primary_number','parser.py',892),
  ('primary_expression -> STRING','primary_expression',1,'p_primary_string','parser.py',897),
  ('primary_expression -> TRUE','primary_expression',1,'p_primary_true','parser.py',902),
  ('primary_expression -> FALSE','primary_expression',1,'p_primary_false','parser.py',907),
  ('primary_expression -> NULL','primary_expression',1,'p_primary_null','parser.py',912),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_identifier','parser.py',917),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_paren','parser.py',922),
  ('primary_expression -> LBRACKET expression_list_opt RBRACKET','primary_expression',3,'p_primary_array','parser.py',927),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','parser.py',932),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','parser.py',933),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list_multiple','parser.py',938),
  ('expression_list -> expression','expression_list',1,'p_expression_list_single','parser.py',943),
  ('primary_expression -> LBRACE object_field_list_opt RBRACE','primary_expression',3,'p_primary_object_literal','parser.py',948),
  ('primary_expression -> IDENTIFIER LBRACE object_field_list_opt RBRACE','primary_expression',4,'p_primary_struct_literal','parser.py',953),
  ('object_field_list_opt -> object_field_list maybe_trailing_comma','object_field_list_opt',2,'p_object_field_list_opt','parser.py',959),
  ('object_field_list_opt -> empty','object_field_list_opt',1,'p_object_field_list_opt','parser.py',960),
  ('object_field_list -> object_field_list COMMA object_field','object_field_list',3,'p_object_field_list_multiple','parser.py',965),
  ('object_field_list -> object_field','object_field_list',1,'p_object_field_list_single','parser.py',970),
  ('object_field -> IDENTIFIER COLON expression','object_field',3,'p_object_field','parser.py',975),
  ('primary_expression -> FN LPAREN parameter_list_opt RPAREN return_type_opt block','primary_expression',6,'p_primary_lambda','parser.py',980),
  ('primary_expression -> ASYNC block','primary_expression',2,'p_primary_async_block','parser.py',985),
  ('primary_expression -> PARALLEL LBRACKET argument_list_opt RBRACKET','primary_expression',4,'p_primary_parallel','parser.py',990),
  ('type -> union_type','type',1,'p_type','parser.py',1001),
  ('union_type -> intersection_type','union_type',1,'p_union_type_single','parser.py',1006),
  ('union_type -> union_type PIPE intersection_type','union_type',3,'p_union_type_multiple','parser.py',1011),
  ('intersection_type -> primary_type','intersection_type',1,'p_intersection_type_single','parser.py',1019),
  ('intersection_type -> intersection_type AMPERSAND primary_type','intersection_type',3,'p_intersection_type_multiple','parser.py',1024),
  ('primary_type -> qualified_name type_arguments_opt','primary_type',2,'p_primary_type_identifier','parser.py',1032),
  ('primary_type -> primary_type LBRACKET RBRACKET','primary_type',3,'p_primary_type_array','parser.py',1037),
  ('primary_type -> LBRACKET type_list RBRACKET','primary_type',3,'p_primary_type_tuple','parser.py',1042),
  ('primary_type -> primary_type QUESTION','primary_type',2,'p_primary_type_optional','parser.py',1047),
  ('primary_type -> LPAREN type RPAREN','primary_type',3,'p_primary_type_group','parser.py',1052),
  ('type_arguments_opt -> LT type_list GT','type_arguments_opt',3,'p_type_arguments_opt','parser.py',1057),
  ('type_arguments_opt -> empty','type_arguments_opt',1,'p_type_arguments_opt','parser.py',1058),
  ('type_list -> type_list COMMA type','type_list',3,'p_type_list_multiple','parser.py',1066),
  ('type_list -> type','type_list',1,'p_type_list_single','parser.py',1071),
  ('pattern -> IDENTIFIER','pattern',1,'p_pattern_wildcard','parser.py',1081),
  ('pattern -> NUMBER','pattern',1,'p_pattern_number','parser.py',1089),
  ('pattern -> STRING','pattern',1,'p_pattern_string','parser.py',1094),
  ('pattern -> TRUE','pattern',1,'p_pattern_boolean_true','parser.py',1099),
  ('pattern -> FALSE','pattern',1,'p_pattern_boolean_false','parser.py',1104),
  ('pattern -> NULL','pattern',1,'p_pattern_null','parser.py',1109),
  ('pattern -> MINUS NUMBER','pattern',2,'p_pattern_negative_number','parser.py',1114),
  ('pattern -> qualified_name LBRACE pattern_field_list_opt RBRACE','pattern',4,'p_pattern_constructor','parser.py',1119),
  ('pattern_field_list_opt -> pattern_field_list maybe_trailing_comma','pattern_field_list_opt',2,'p_pattern_field_list_opt','parser.py',1125),
  ('pattern_field_list_opt -> empty','pattern_field_list_opt',1,'p_pattern_field_list_opt','parser.py',1126),
  ('pattern_field_list -> pattern_field_list COMMA pattern_field','pattern_field_list',3,'p_pattern_field_list_multiple','parser.py',1131),
  ('pattern_field_list -> pattern_field','pattern_field_list',1,'p_pattern_field_list_single','parser.py',1136),
  ('pattern_field -> IDENTIFIER COLON pattern','pattern_field',3,'p_pattern_field_renamed','parser.py',1141),
  ('pattern_field -> IDENTIFIER','pattern_field',1,'p_pattern_field_shorthand','parser.py',1146),
  ('qualified_name -> IDENTIFIER','qualified_name',1,'p_qualified_name','parser.py',1151),
  ('qualified_name -> qualified_name DOT IDENTIFIER','qualified_name',3,'p_qualified_name','parser.py',1152),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1160),
]
