Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    ASYNC
    AWAIT
    COLON
    FALSE
    IMPLEMENTS
    INTERFACE
    NULL
    PIPE
    QUESTION_MARK
    ROUTINE
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> variable_declaration
Rule 5     statement -> constant_declaration
Rule 6     statement -> function_declaration
Rule 7     statement -> struct_declaration
Rule 8     statement -> enum_declaration
Rule 9     statement -> print_statement
Rule 10    statement -> if_statement
Rule 11    statement -> return_statement
Rule 12    statement -> assignment
Rule 13    statement -> expression_statement
Rule 14    statement -> match_statement
Rule 15    statement -> import_statement
Rule 16    match_statement -> MATCH expression LBRACE match_arms RBRACE
Rule 17    match_arms -> <empty>
Rule 18    match_arms -> match_arm_list maybe_comma
Rule 19    match_arm_list -> match_arm
Rule 20    match_arm_list -> match_arm_list COMMA match_arm
Rule 21    maybe_comma -> COMMA
Rule 22    maybe_comma -> empty
Rule 23    match_arm -> pattern ARROW inline_statement
Rule 24    inline_statement -> PRINT DOT INFO LPAREN expression RPAREN
Rule 25    inline_statement -> assignment_expression
Rule 26    inline_statement -> expression
Rule 27    pattern -> MINUS NUMBER
Rule 28    pattern -> NUMBER
Rule 29    pattern -> UNDERSCORE
Rule 30    assignment_expression -> lvalue ASSIGN expression
Rule 31    assignment_expression -> lvalue PLUS_ASSIGN expression
Rule 32    assignment_expression -> lvalue MINUS_ASSIGN expression
Rule 33    assignment_expression -> lvalue MULTIPLY_ASSIGN expression
Rule 34    assignment_expression -> lvalue DIVIDE_ASSIGN expression
Rule 35    type_alias_declaration -> TYPE IDENTIFIER ASSIGN type SEMICOLON
Rule 36    struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE
Rule 37    struct_members -> struct_members struct_member
Rule 38    struct_members -> struct_member
Rule 39    struct_member -> mut_field_declaration
Rule 40    struct_member -> field_declaration
Rule 41    struct_member -> method_declaration
Rule 42    method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
Rule 43    method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
Rule 44    mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON
Rule 45    field_declaration -> LET IDENTIFIER ARROW type SEMICOLON
Rule 46    enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
Rule 47    enum_variants_opt -> enum_variants
Rule 48    enum_variants_opt -> empty
Rule 49    enum_variants -> enum_variant_list maybe_trailing_comma
Rule 50    enum_variant_list -> enum_variant
Rule 51    enum_variant_list -> enum_variant_list COMMA enum_variant
Rule 52    maybe_trailing_comma -> COMMA
Rule 53    maybe_trailing_comma -> empty
Rule 54    enum_variant -> IDENTIFIER LBRACE struct_members RBRACE
Rule 55    enum_variant -> IDENTIFIER
Rule 56    decorators -> decorators decorator
Rule 57    decorators -> decorator
Rule 58    decorator -> AT IDENTIFIER
Rule 59    constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
Rule 60    variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
Rule 61    variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
Rule 62    variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
Rule 63    variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON
Rule 64    mut_opt -> MUT
Rule 65    mut_opt -> <empty>
Rule 66    function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
Rule 67    function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 68    function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
Rule 69    function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 70    print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
Rule 71    import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
Rule 72    import_items -> import_items COMMA IDENTIFIER
Rule 73    import_items -> IDENTIFIER
Rule 74    import_items -> <empty>
Rule 75    block -> LBRACE statements RBRACE
Rule 76    if_statement -> IF expression block else_clause
Rule 77    if_statement -> IF LPAREN expression RPAREN block else_clause
Rule 78    else_clause -> ELSE if_statement
Rule 79    else_clause -> ELSE block
Rule 80    else_clause -> <empty>
Rule 81    return_statement -> RETURN expression SEMICOLON
Rule 82    return_statement -> RETURN SEMICOLON
Rule 83    assignment -> assignment_expression SEMICOLON
Rule 84    lvalue -> IDENTIFIER
Rule 85    lvalue -> expression DOT IDENTIFIER
Rule 86    expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
Rule 87    expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 88    expression_statement -> expression SEMICOLON
Rule 89    parameters -> parameters COMMA parameter
Rule 90    parameters -> parameters COMMA
Rule 91    parameters -> parameter
Rule 92    parameters -> <empty>
Rule 93    parameter -> IDENTIFIER ARROW type
Rule 94    parameter -> IDENTIFIER
Rule 95    type -> IDENTIFIER
Rule 96    type -> type LT type_list GT
Rule 97    type_list -> type_list COMMA type
Rule 98    type_list -> type
Rule 99    expression -> LBRACKET elements RBRACKET
Rule 100   elements -> elements COMMA expression
Rule 101   elements -> elements COMMA
Rule 102   elements -> expression
Rule 103   elements -> <empty>
Rule 104   expression -> expression PLUS expression
Rule 105   expression -> expression MINUS expression
Rule 106   expression -> expression MULTIPLY expression
Rule 107   expression -> expression DIVIDE expression
Rule 108   expression -> expression LT expression
Rule 109   expression -> expression GT expression
Rule 110   expression -> expression LEQ expression
Rule 111   expression -> expression GEQ expression
Rule 112   expression -> expression EQ expression
Rule 113   expression -> expression NEQ expression
Rule 114   expression -> expression AND expression
Rule 115   expression -> expression OR expression
Rule 116   expression -> MINUS expression
Rule 117   expression -> LPAREN expression RPAREN
Rule 118   expression -> NUMBER
Rule 119   expression -> STRING
Rule 120   expression -> IDENTIFIER
Rule 121   expression -> IDENTIFIER LPAREN arguments RPAREN
Rule 122   expression -> expression LPAREN arguments RPAREN
Rule 123   expression -> expression DOT IDENTIFIER
Rule 124   arguments -> arguments COMMA expression
Rule 125   arguments -> expression
Rule 126   arguments -> <empty>
Rule 127   empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 
AND                  : 114
ARROW                : 23 42 43 44 45 59 60 62 66 68 86 93
ASSIGN               : 30 35 59 60 61 62 63
ASYNC                : 
AT                   : 58
AWAIT                : 
COLON                : 
COMMA                : 20 21 51 52 72 89 90 97 100 101 124
CONST                : 59
DIVIDE               : 107
DIVIDE_ASSIGN        : 34
DOT                  : 24 70 85 123
ELSE                 : 78 79
ENUM                 : 46
EQ                   : 112
FALSE                : 
FN                   : 42 43 66 67 68 69 86 87
FROM                 : 71
GEQ                  : 111
GT                   : 96 109
IDENTIFIER           : 35 36 42 43 44 45 46 54 55 58 59 60 61 62 63 66 67 68 69 72 73 84 85 93 94 95 120 121 123
IF                   : 76 77
IMPLEMENTS           : 
IMPORT               : 71
INFO                 : 24 70
INTERFACE            : 
LBRACE               : 16 36 42 43 46 54 66 67 68 69 71 75 86 87
LBRACKET             : 99
LEQ                  : 110
LET                  : 44 45 59 60 61
LPAREN               : 24 42 43 66 67 68 69 70 77 86 87 117 121 122
LT                   : 96 108
MATCH                : 16
MINUS                : 27 105 116
MINUS_ASSIGN         : 32
MULTIPLY             : 106
MULTIPLY_ASSIGN      : 33
MUT                  : 44 62 63 64
NEQ                  : 113
NULL                 : 
NUMBER               : 27 28 118
OR                   : 115
PIPE                 : 
PLUS                 : 104
PLUS_ASSIGN          : 31
PRINT                : 24 70
QUESTION_MARK        : 
RBRACE               : 16 36 42 43 46 54 66 67 68 69 71 75 86 87
RBRACKET             : 99
RETURN               : 81 82
ROUTINE              : 
RPAREN               : 24 42 43 66 67 68 69 70 77 86 87 117 121 122
SEMICOLON            : 35 44 45 59 60 61 62 63 70 71 81 82 83 88
STRING               : 71 119
STRUCT               : 36
TRUE                 : 
TYPE                 : 35
UNDERSCORE           : 29
error                : 

Nonterminals, with rules where they appear

arguments            : 121 122 124
assignment           : 12
assignment_expression : 25 83
block                : 76 77 79
constant_declaration : 5
decorator            : 56 57
decorators           : 42 56 66 67
elements             : 99 100 101
else_clause          : 76 77
empty                : 22 48 53
enum_declaration     : 8
enum_variant         : 50 51
enum_variant_list    : 49 51
enum_variants        : 47
enum_variants_opt    : 46
expression           : 16 24 26 30 31 32 33 34 59 60 61 62 63 70 76 77 81 85 88 100 102 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 117 122 123 124 125
expression_statement : 13
field_declaration    : 40
function_declaration : 6
if_statement         : 10 78
import_items         : 71 72
import_statement     : 15
inline_statement     : 23
lvalue               : 30 31 32 33 34
match_arm            : 19 20
match_arm_list       : 18 20
match_arms           : 16
match_statement      : 14
maybe_comma          : 18
maybe_trailing_comma : 49
method_declaration   : 41
mut_field_declaration : 39
mut_opt              : 60 61
parameter            : 89 91
parameters           : 42 43 66 67 68 69 86 87 89 90
pattern              : 23
print_statement      : 9
program              : 0
return_statement     : 11
statement            : 2 3
statements           : 1 2 42 43 66 67 68 69 75 86 87
struct_declaration   : 7
struct_member        : 37 38
struct_members       : 36 37 54
type                 : 35 42 43 44 45 59 60 62 66 68 86 93 96 97 98
type_alias_declaration : 
type_list            : 96 97
variable_declaration : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    $end            reduce using rule 1 (program -> statements .)
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 3

    (3) statements -> statement .

    LET             reduce using rule 3 (statements -> statement .)
    MUT             reduce using rule 3 (statements -> statement .)
    CONST           reduce using rule 3 (statements -> statement .)
    FN              reduce using rule 3 (statements -> statement .)
    STRUCT          reduce using rule 3 (statements -> statement .)
    ENUM            reduce using rule 3 (statements -> statement .)
    PRINT           reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    RETURN          reduce using rule 3 (statements -> statement .)
    MATCH           reduce using rule 3 (statements -> statement .)
    IMPORT          reduce using rule 3 (statements -> statement .)
    LBRACKET        reduce using rule 3 (statements -> statement .)
    MINUS           reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    NUMBER          reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    IDENTIFIER      reduce using rule 3 (statements -> statement .)
    AT              reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRACE          reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> variable_declaration .

    LET             reduce using rule 4 (statement -> variable_declaration .)
    MUT             reduce using rule 4 (statement -> variable_declaration .)
    CONST           reduce using rule 4 (statement -> variable_declaration .)
    FN              reduce using rule 4 (statement -> variable_declaration .)
    STRUCT          reduce using rule 4 (statement -> variable_declaration .)
    ENUM            reduce using rule 4 (statement -> variable_declaration .)
    PRINT           reduce using rule 4 (statement -> variable_declaration .)
    IF              reduce using rule 4 (statement -> variable_declaration .)
    RETURN          reduce using rule 4 (statement -> variable_declaration .)
    MATCH           reduce using rule 4 (statement -> variable_declaration .)
    IMPORT          reduce using rule 4 (statement -> variable_declaration .)
    LBRACKET        reduce using rule 4 (statement -> variable_declaration .)
    MINUS           reduce using rule 4 (statement -> variable_declaration .)
    LPAREN          reduce using rule 4 (statement -> variable_declaration .)
    NUMBER          reduce using rule 4 (statement -> variable_declaration .)
    STRING          reduce using rule 4 (statement -> variable_declaration .)
    IDENTIFIER      reduce using rule 4 (statement -> variable_declaration .)
    AT              reduce using rule 4 (statement -> variable_declaration .)
    $end            reduce using rule 4 (statement -> variable_declaration .)
    RBRACE          reduce using rule 4 (statement -> variable_declaration .)


state 5

    (5) statement -> constant_declaration .

    LET             reduce using rule 5 (statement -> constant_declaration .)
    MUT             reduce using rule 5 (statement -> constant_declaration .)
    CONST           reduce using rule 5 (statement -> constant_declaration .)
    FN              reduce using rule 5 (statement -> constant_declaration .)
    STRUCT          reduce using rule 5 (statement -> constant_declaration .)
    ENUM            reduce using rule 5 (statement -> constant_declaration .)
    PRINT           reduce using rule 5 (statement -> constant_declaration .)
    IF              reduce using rule 5 (statement -> constant_declaration .)
    RETURN          reduce using rule 5 (statement -> constant_declaration .)
    MATCH           reduce using rule 5 (statement -> constant_declaration .)
    IMPORT          reduce using rule 5 (statement -> constant_declaration .)
    LBRACKET        reduce using rule 5 (statement -> constant_declaration .)
    MINUS           reduce using rule 5 (statement -> constant_declaration .)
    LPAREN          reduce using rule 5 (statement -> constant_declaration .)
    NUMBER          reduce using rule 5 (statement -> constant_declaration .)
    STRING          reduce using rule 5 (statement -> constant_declaration .)
    IDENTIFIER      reduce using rule 5 (statement -> constant_declaration .)
    AT              reduce using rule 5 (statement -> constant_declaration .)
    $end            reduce using rule 5 (statement -> constant_declaration .)
    RBRACE          reduce using rule 5 (statement -> constant_declaration .)


state 6

    (6) statement -> function_declaration .

    LET             reduce using rule 6 (statement -> function_declaration .)
    MUT             reduce using rule 6 (statement -> function_declaration .)
    CONST           reduce using rule 6 (statement -> function_declaration .)
    FN              reduce using rule 6 (statement -> function_declaration .)
    STRUCT          reduce using rule 6 (statement -> function_declaration .)
    ENUM            reduce using rule 6 (statement -> function_declaration .)
    PRINT           reduce using rule 6 (statement -> function_declaration .)
    IF              reduce using rule 6 (statement -> function_declaration .)
    RETURN          reduce using rule 6 (statement -> function_declaration .)
    MATCH           reduce using rule 6 (statement -> function_declaration .)
    IMPORT          reduce using rule 6 (statement -> function_declaration .)
    LBRACKET        reduce using rule 6 (statement -> function_declaration .)
    MINUS           reduce using rule 6 (statement -> function_declaration .)
    LPAREN          reduce using rule 6 (statement -> function_declaration .)
    NUMBER          reduce using rule 6 (statement -> function_declaration .)
    STRING          reduce using rule 6 (statement -> function_declaration .)
    IDENTIFIER      reduce using rule 6 (statement -> function_declaration .)
    AT              reduce using rule 6 (statement -> function_declaration .)
    $end            reduce using rule 6 (statement -> function_declaration .)
    RBRACE          reduce using rule 6 (statement -> function_declaration .)


state 7

    (7) statement -> struct_declaration .

    LET             reduce using rule 7 (statement -> struct_declaration .)
    MUT             reduce using rule 7 (statement -> struct_declaration .)
    CONST           reduce using rule 7 (statement -> struct_declaration .)
    FN              reduce using rule 7 (statement -> struct_declaration .)
    STRUCT          reduce using rule 7 (statement -> struct_declaration .)
    ENUM            reduce using rule 7 (statement -> struct_declaration .)
    PRINT           reduce using rule 7 (statement -> struct_declaration .)
    IF              reduce using rule 7 (statement -> struct_declaration .)
    RETURN          reduce using rule 7 (statement -> struct_declaration .)
    MATCH           reduce using rule 7 (statement -> struct_declaration .)
    IMPORT          reduce using rule 7 (statement -> struct_declaration .)
    LBRACKET        reduce using rule 7 (statement -> struct_declaration .)
    MINUS           reduce using rule 7 (statement -> struct_declaration .)
    LPAREN          reduce using rule 7 (statement -> struct_declaration .)
    NUMBER          reduce using rule 7 (statement -> struct_declaration .)
    STRING          reduce using rule 7 (statement -> struct_declaration .)
    IDENTIFIER      reduce using rule 7 (statement -> struct_declaration .)
    AT              reduce using rule 7 (statement -> struct_declaration .)
    $end            reduce using rule 7 (statement -> struct_declaration .)
    RBRACE          reduce using rule 7 (statement -> struct_declaration .)


state 8

    (8) statement -> enum_declaration .

    LET             reduce using rule 8 (statement -> enum_declaration .)
    MUT             reduce using rule 8 (statement -> enum_declaration .)
    CONST           reduce using rule 8 (statement -> enum_declaration .)
    FN              reduce using rule 8 (statement -> enum_declaration .)
    STRUCT          reduce using rule 8 (statement -> enum_declaration .)
    ENUM            reduce using rule 8 (statement -> enum_declaration .)
    PRINT           reduce using rule 8 (statement -> enum_declaration .)
    IF              reduce using rule 8 (statement -> enum_declaration .)
    RETURN          reduce using rule 8 (statement -> enum_declaration .)
    MATCH           reduce using rule 8 (statement -> enum_declaration .)
    IMPORT          reduce using rule 8 (statement -> enum_declaration .)
    LBRACKET        reduce using rule 8 (statement -> enum_declaration .)
    MINUS           reduce using rule 8 (statement -> enum_declaration .)
    LPAREN          reduce using rule 8 (statement -> enum_declaration .)
    NUMBER          reduce using rule 8 (statement -> enum_declaration .)
    STRING          reduce using rule 8 (statement -> enum_declaration .)
    IDENTIFIER      reduce using rule 8 (statement -> enum_declaration .)
    AT              reduce using rule 8 (statement -> enum_declaration .)
    $end            reduce using rule 8 (statement -> enum_declaration .)
    RBRACE          reduce using rule 8 (statement -> enum_declaration .)


state 9

    (9) statement -> print_statement .

    LET             reduce using rule 9 (statement -> print_statement .)
    MUT             reduce using rule 9 (statement -> print_statement .)
    CONST           reduce using rule 9 (statement -> print_statement .)
    FN              reduce using rule 9 (statement -> print_statement .)
    STRUCT          reduce using rule 9 (statement -> print_statement .)
    ENUM            reduce using rule 9 (statement -> print_statement .)
    PRINT           reduce using rule 9 (statement -> print_statement .)
    IF              reduce using rule 9 (statement -> print_statement .)
    RETURN          reduce using rule 9 (statement -> print_statement .)
    MATCH           reduce using rule 9 (statement -> print_statement .)
    IMPORT          reduce using rule 9 (statement -> print_statement .)
    LBRACKET        reduce using rule 9 (statement -> print_statement .)
    MINUS           reduce using rule 9 (statement -> print_statement .)
    LPAREN          reduce using rule 9 (statement -> print_statement .)
    NUMBER          reduce using rule 9 (statement -> print_statement .)
    STRING          reduce using rule 9 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> print_statement .)
    AT              reduce using rule 9 (statement -> print_statement .)
    $end            reduce using rule 9 (statement -> print_statement .)
    RBRACE          reduce using rule 9 (statement -> print_statement .)


state 10

    (10) statement -> if_statement .

    LET             reduce using rule 10 (statement -> if_statement .)
    MUT             reduce using rule 10 (statement -> if_statement .)
    CONST           reduce using rule 10 (statement -> if_statement .)
    FN              reduce using rule 10 (statement -> if_statement .)
    STRUCT          reduce using rule 10 (statement -> if_statement .)
    ENUM            reduce using rule 10 (statement -> if_statement .)
    PRINT           reduce using rule 10 (statement -> if_statement .)
    IF              reduce using rule 10 (statement -> if_statement .)
    RETURN          reduce using rule 10 (statement -> if_statement .)
    MATCH           reduce using rule 10 (statement -> if_statement .)
    IMPORT          reduce using rule 10 (statement -> if_statement .)
    LBRACKET        reduce using rule 10 (statement -> if_statement .)
    MINUS           reduce using rule 10 (statement -> if_statement .)
    LPAREN          reduce using rule 10 (statement -> if_statement .)
    NUMBER          reduce using rule 10 (statement -> if_statement .)
    STRING          reduce using rule 10 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> if_statement .)
    AT              reduce using rule 10 (statement -> if_statement .)
    $end            reduce using rule 10 (statement -> if_statement .)
    RBRACE          reduce using rule 10 (statement -> if_statement .)


state 11

    (11) statement -> return_statement .

    LET             reduce using rule 11 (statement -> return_statement .)
    MUT             reduce using rule 11 (statement -> return_statement .)
    CONST           reduce using rule 11 (statement -> return_statement .)
    FN              reduce using rule 11 (statement -> return_statement .)
    STRUCT          reduce using rule 11 (statement -> return_statement .)
    ENUM            reduce using rule 11 (statement -> return_statement .)
    PRINT           reduce using rule 11 (statement -> return_statement .)
    IF              reduce using rule 11 (statement -> return_statement .)
    RETURN          reduce using rule 11 (statement -> return_statement .)
    MATCH           reduce using rule 11 (statement -> return_statement .)
    IMPORT          reduce using rule 11 (statement -> return_statement .)
    LBRACKET        reduce using rule 11 (statement -> return_statement .)
    MINUS           reduce using rule 11 (statement -> return_statement .)
    LPAREN          reduce using rule 11 (statement -> return_statement .)
    NUMBER          reduce using rule 11 (statement -> return_statement .)
    STRING          reduce using rule 11 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> return_statement .)
    AT              reduce using rule 11 (statement -> return_statement .)
    $end            reduce using rule 11 (statement -> return_statement .)
    RBRACE          reduce using rule 11 (statement -> return_statement .)


state 12

    (12) statement -> assignment .

    LET             reduce using rule 12 (statement -> assignment .)
    MUT             reduce using rule 12 (statement -> assignment .)
    CONST           reduce using rule 12 (statement -> assignment .)
    FN              reduce using rule 12 (statement -> assignment .)
    STRUCT          reduce using rule 12 (statement -> assignment .)
    ENUM            reduce using rule 12 (statement -> assignment .)
    PRINT           reduce using rule 12 (statement -> assignment .)
    IF              reduce using rule 12 (statement -> assignment .)
    RETURN          reduce using rule 12 (statement -> assignment .)
    MATCH           reduce using rule 12 (statement -> assignment .)
    IMPORT          reduce using rule 12 (statement -> assignment .)
    LBRACKET        reduce using rule 12 (statement -> assignment .)
    MINUS           reduce using rule 12 (statement -> assignment .)
    LPAREN          reduce using rule 12 (statement -> assignment .)
    NUMBER          reduce using rule 12 (statement -> assignment .)
    STRING          reduce using rule 12 (statement -> assignment .)
    IDENTIFIER      reduce using rule 12 (statement -> assignment .)
    AT              reduce using rule 12 (statement -> assignment .)
    $end            reduce using rule 12 (statement -> assignment .)
    RBRACE          reduce using rule 12 (statement -> assignment .)


state 13

    (13) statement -> expression_statement .

    LET             reduce using rule 13 (statement -> expression_statement .)
    MUT             reduce using rule 13 (statement -> expression_statement .)
    CONST           reduce using rule 13 (statement -> expression_statement .)
    FN              reduce using rule 13 (statement -> expression_statement .)
    STRUCT          reduce using rule 13 (statement -> expression_statement .)
    ENUM            reduce using rule 13 (statement -> expression_statement .)
    PRINT           reduce using rule 13 (statement -> expression_statement .)
    IF              reduce using rule 13 (statement -> expression_statement .)
    RETURN          reduce using rule 13 (statement -> expression_statement .)
    MATCH           reduce using rule 13 (statement -> expression_statement .)
    IMPORT          reduce using rule 13 (statement -> expression_statement .)
    LBRACKET        reduce using rule 13 (statement -> expression_statement .)
    MINUS           reduce using rule 13 (statement -> expression_statement .)
    LPAREN          reduce using rule 13 (statement -> expression_statement .)
    NUMBER          reduce using rule 13 (statement -> expression_statement .)
    STRING          reduce using rule 13 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> expression_statement .)
    AT              reduce using rule 13 (statement -> expression_statement .)
    $end            reduce using rule 13 (statement -> expression_statement .)
    RBRACE          reduce using rule 13 (statement -> expression_statement .)


state 14

    (14) statement -> match_statement .

    LET             reduce using rule 14 (statement -> match_statement .)
    MUT             reduce using rule 14 (statement -> match_statement .)
    CONST           reduce using rule 14 (statement -> match_statement .)
    FN              reduce using rule 14 (statement -> match_statement .)
    STRUCT          reduce using rule 14 (statement -> match_statement .)
    ENUM            reduce using rule 14 (statement -> match_statement .)
    PRINT           reduce using rule 14 (statement -> match_statement .)
    IF              reduce using rule 14 (statement -> match_statement .)
    RETURN          reduce using rule 14 (statement -> match_statement .)
    MATCH           reduce using rule 14 (statement -> match_statement .)
    IMPORT          reduce using rule 14 (statement -> match_statement .)
    LBRACKET        reduce using rule 14 (statement -> match_statement .)
    MINUS           reduce using rule 14 (statement -> match_statement .)
    LPAREN          reduce using rule 14 (statement -> match_statement .)
    NUMBER          reduce using rule 14 (statement -> match_statement .)
    STRING          reduce using rule 14 (statement -> match_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> match_statement .)
    AT              reduce using rule 14 (statement -> match_statement .)
    $end            reduce using rule 14 (statement -> match_statement .)
    RBRACE          reduce using rule 14 (statement -> match_statement .)


state 15

    (15) statement -> import_statement .

    LET             reduce using rule 15 (statement -> import_statement .)
    MUT             reduce using rule 15 (statement -> import_statement .)
    CONST           reduce using rule 15 (statement -> import_statement .)
    FN              reduce using rule 15 (statement -> import_statement .)
    STRUCT          reduce using rule 15 (statement -> import_statement .)
    ENUM            reduce using rule 15 (statement -> import_statement .)
    PRINT           reduce using rule 15 (statement -> import_statement .)
    IF              reduce using rule 15 (statement -> import_statement .)
    RETURN          reduce using rule 15 (statement -> import_statement .)
    MATCH           reduce using rule 15 (statement -> import_statement .)
    IMPORT          reduce using rule 15 (statement -> import_statement .)
    LBRACKET        reduce using rule 15 (statement -> import_statement .)
    MINUS           reduce using rule 15 (statement -> import_statement .)
    LPAREN          reduce using rule 15 (statement -> import_statement .)
    NUMBER          reduce using rule 15 (statement -> import_statement .)
    STRING          reduce using rule 15 (statement -> import_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> import_statement .)
    AT              reduce using rule 15 (statement -> import_statement .)
    $end            reduce using rule 15 (statement -> import_statement .)
    RBRACE          reduce using rule 15 (statement -> import_statement .)


state 16

    (60) variable_declaration -> LET . mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> LET . mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (64) mut_opt -> . MUT
    (65) mut_opt -> .

    MUT             shift and go to state 41
    IDENTIFIER      reduce using rule 65 (mut_opt -> .)

    mut_opt                        shift and go to state 40

state 17

    (120) expression -> IDENTIFIER .
    (121) expression -> IDENTIFIER . LPAREN arguments RPAREN
    (84) lvalue -> IDENTIFIER .

  ! shift/reduce conflict for LPAREN resolved as shift
    SEMICOLON       reduce using rule 120 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 120 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 120 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 120 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 120 (expression -> IDENTIFIER .)
    LT              reduce using rule 120 (expression -> IDENTIFIER .)
    GT              reduce using rule 120 (expression -> IDENTIFIER .)
    LEQ             reduce using rule 120 (expression -> IDENTIFIER .)
    GEQ             reduce using rule 120 (expression -> IDENTIFIER .)
    EQ              reduce using rule 120 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 120 (expression -> IDENTIFIER .)
    AND             reduce using rule 120 (expression -> IDENTIFIER .)
    OR              reduce using rule 120 (expression -> IDENTIFIER .)
    DOT             reduce using rule 120 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 120 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 120 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 42
    ASSIGN          reduce using rule 84 (lvalue -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 84 (lvalue -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 84 (lvalue -> IDENTIFIER .)
    MULTIPLY_ASSIGN reduce using rule 84 (lvalue -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 84 (lvalue -> IDENTIFIER .)

  ! LPAREN          [ reduce using rule 120 (expression -> IDENTIFIER .) ]


state 18

    (88) expression_statement -> expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER
    (85) lvalue -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 57


state 19

    (62) variable_declaration -> MUT . IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> MUT . IDENTIFIER ASSIGN expression SEMICOLON

    IDENTIFIER      shift and go to state 58


state 20

    (59) constant_declaration -> CONST . LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON

    LET             shift and go to state 59


state 21

    (66) function_declaration -> decorators . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> decorators . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (56) decorators -> decorators . decorator
    (58) decorator -> . AT IDENTIFIER

    FN              shift and go to state 60
    AT              shift and go to state 38

    decorator                      shift and go to state 61

state 22

    (68) function_declaration -> FN . IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> FN . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (86) expression -> FN . LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> FN . LPAREN parameters RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63


state 23

    (117) expression -> LPAREN . expression RPAREN
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 64

state 24

    (36) struct_declaration -> STRUCT . IDENTIFIER LBRACE struct_members RBRACE

    IDENTIFIER      shift and go to state 67


state 25

    (46) enum_declaration -> ENUM . IDENTIFIER LBRACE enum_variants_opt RBRACE

    IDENTIFIER      shift and go to state 68


state 26

    (70) print_statement -> PRINT . DOT INFO LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 69


state 27

    (76) if_statement -> IF . expression block else_clause
    (77) if_statement -> IF . LPAREN expression RPAREN block else_clause
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    LPAREN          shift and go to state 71
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 70

state 28

    (81) return_statement -> RETURN . expression SEMICOLON
    (82) return_statement -> RETURN . SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    SEMICOLON       shift and go to state 73
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 72

state 29

    (83) assignment -> assignment_expression . SEMICOLON

    SEMICOLON       shift and go to state 74


state 30

    (16) match_statement -> MATCH . expression LBRACE match_arms RBRACE
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 75

state 31

    (71) import_statement -> IMPORT . LBRACE import_items RBRACE FROM STRING SEMICOLON

    LBRACE          shift and go to state 76


state 32

    (119) expression -> STRING .

    SEMICOLON       reduce using rule 119 (expression -> STRING .)
    PLUS            reduce using rule 119 (expression -> STRING .)
    MINUS           reduce using rule 119 (expression -> STRING .)
    MULTIPLY        reduce using rule 119 (expression -> STRING .)
    DIVIDE          reduce using rule 119 (expression -> STRING .)
    LT              reduce using rule 119 (expression -> STRING .)
    GT              reduce using rule 119 (expression -> STRING .)
    LEQ             reduce using rule 119 (expression -> STRING .)
    GEQ             reduce using rule 119 (expression -> STRING .)
    EQ              reduce using rule 119 (expression -> STRING .)
    NEQ             reduce using rule 119 (expression -> STRING .)
    AND             reduce using rule 119 (expression -> STRING .)
    OR              reduce using rule 119 (expression -> STRING .)
    LPAREN          reduce using rule 119 (expression -> STRING .)
    DOT             reduce using rule 119 (expression -> STRING .)
    RPAREN          reduce using rule 119 (expression -> STRING .)
    LBRACE          reduce using rule 119 (expression -> STRING .)
    RBRACKET        reduce using rule 119 (expression -> STRING .)
    COMMA           reduce using rule 119 (expression -> STRING .)
    RBRACE          reduce using rule 119 (expression -> STRING .)


state 33

    (57) decorators -> decorator .

    FN              reduce using rule 57 (decorators -> decorator .)
    AT              reduce using rule 57 (decorators -> decorator .)


state 34

    (30) assignment_expression -> lvalue . ASSIGN expression
    (31) assignment_expression -> lvalue . PLUS_ASSIGN expression
    (32) assignment_expression -> lvalue . MINUS_ASSIGN expression
    (33) assignment_expression -> lvalue . MULTIPLY_ASSIGN expression
    (34) assignment_expression -> lvalue . DIVIDE_ASSIGN expression

    ASSIGN          shift and go to state 77
    PLUS_ASSIGN     shift and go to state 78
    MINUS_ASSIGN    shift and go to state 79
    MULTIPLY_ASSIGN shift and go to state 80
    DIVIDE_ASSIGN   shift and go to state 81


state 35

    (99) expression -> LBRACKET . elements RBRACKET
    (100) elements -> . elements COMMA expression
    (101) elements -> . elements COMMA
    (102) elements -> . expression
    (103) elements -> .
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    RBRACKET        reduce using rule 103 (elements -> .)
    COMMA           reduce using rule 103 (elements -> .)
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    elements                       shift and go to state 82
    expression                     shift and go to state 83

state 36

    (116) expression -> MINUS . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 84

state 37

    (118) expression -> NUMBER .

    SEMICOLON       reduce using rule 118 (expression -> NUMBER .)
    PLUS            reduce using rule 118 (expression -> NUMBER .)
    MINUS           reduce using rule 118 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 118 (expression -> NUMBER .)
    DIVIDE          reduce using rule 118 (expression -> NUMBER .)
    LT              reduce using rule 118 (expression -> NUMBER .)
    GT              reduce using rule 118 (expression -> NUMBER .)
    LEQ             reduce using rule 118 (expression -> NUMBER .)
    GEQ             reduce using rule 118 (expression -> NUMBER .)
    EQ              reduce using rule 118 (expression -> NUMBER .)
    NEQ             reduce using rule 118 (expression -> NUMBER .)
    AND             reduce using rule 118 (expression -> NUMBER .)
    OR              reduce using rule 118 (expression -> NUMBER .)
    LPAREN          reduce using rule 118 (expression -> NUMBER .)
    DOT             reduce using rule 118 (expression -> NUMBER .)
    RPAREN          reduce using rule 118 (expression -> NUMBER .)
    LBRACE          reduce using rule 118 (expression -> NUMBER .)
    RBRACKET        reduce using rule 118 (expression -> NUMBER .)
    COMMA           reduce using rule 118 (expression -> NUMBER .)
    RBRACE          reduce using rule 118 (expression -> NUMBER .)


state 38

    (58) decorator -> AT . IDENTIFIER

    IDENTIFIER      shift and go to state 85


state 39

    (2) statements -> statements statement .

    LET             reduce using rule 2 (statements -> statements statement .)
    MUT             reduce using rule 2 (statements -> statements statement .)
    CONST           reduce using rule 2 (statements -> statements statement .)
    FN              reduce using rule 2 (statements -> statements statement .)
    STRUCT          reduce using rule 2 (statements -> statements statement .)
    ENUM            reduce using rule 2 (statements -> statements statement .)
    PRINT           reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    RETURN          reduce using rule 2 (statements -> statements statement .)
    MATCH           reduce using rule 2 (statements -> statements statement .)
    IMPORT          reduce using rule 2 (statements -> statements statement .)
    LBRACKET        reduce using rule 2 (statements -> statements statement .)
    MINUS           reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    NUMBER          reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 2 (statements -> statements statement .)
    AT              reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRACE          reduce using rule 2 (statements -> statements statement .)


state 40

    (60) variable_declaration -> LET mut_opt . IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> LET mut_opt . IDENTIFIER ASSIGN expression SEMICOLON

    IDENTIFIER      shift and go to state 86


state 41

    (64) mut_opt -> MUT .

    IDENTIFIER      reduce using rule 64 (mut_opt -> MUT .)


state 42

    (121) expression -> IDENTIFIER LPAREN . arguments RPAREN
    (124) arguments -> . arguments COMMA expression
    (125) arguments -> . expression
    (126) arguments -> .
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    RPAREN          reduce using rule 126 (arguments -> .)
    COMMA           reduce using rule 126 (arguments -> .)
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    arguments                      shift and go to state 87
    expression                     shift and go to state 88

state 43

    (88) expression_statement -> expression SEMICOLON .

    LET             reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    MUT             reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    CONST           reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    FN              reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    STRUCT          reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    ENUM            reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    PRINT           reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    RETURN          reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    MATCH           reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    IMPORT          reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    MINUS           reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    AT              reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 88 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 88 (expression_statement -> expression SEMICOLON .)


state 44

    (104) expression -> expression PLUS . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 89

state 45

    (105) expression -> expression MINUS . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 90

state 46

    (106) expression -> expression MULTIPLY . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 91

state 47

    (107) expression -> expression DIVIDE . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 92

state 48

    (108) expression -> expression LT . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 93

state 49

    (109) expression -> expression GT . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 94

state 50

    (110) expression -> expression LEQ . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 95

state 51

    (111) expression -> expression GEQ . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 96

state 52

    (112) expression -> expression EQ . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 97

state 53

    (113) expression -> expression NEQ . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 98

state 54

    (114) expression -> expression AND . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 99

state 55

    (115) expression -> expression OR . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 100

state 56

    (122) expression -> expression LPAREN . arguments RPAREN
    (124) arguments -> . arguments COMMA expression
    (125) arguments -> . expression
    (126) arguments -> .
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    RPAREN          reduce using rule 126 (arguments -> .)
    COMMA           reduce using rule 126 (arguments -> .)
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 88
    arguments                      shift and go to state 101

state 57

    (123) expression -> expression DOT . IDENTIFIER
    (85) lvalue -> expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 102


state 58

    (62) variable_declaration -> MUT IDENTIFIER . ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> MUT IDENTIFIER . ASSIGN expression SEMICOLON

    ARROW           shift and go to state 103
    ASSIGN          shift and go to state 104


state 59

    (59) constant_declaration -> CONST LET . IDENTIFIER ARROW type ASSIGN expression SEMICOLON

    IDENTIFIER      shift and go to state 105


state 60

    (66) function_declaration -> decorators FN . IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> decorators FN . IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 106


state 61

    (56) decorators -> decorators decorator .

    FN              reduce using rule 56 (decorators -> decorators decorator .)
    AT              reduce using rule 56 (decorators -> decorators decorator .)


state 62

    (68) function_declaration -> FN IDENTIFIER . LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> FN IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 107


state 63

    (86) expression -> FN LPAREN . parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> FN LPAREN . parameters RPAREN LBRACE statements RBRACE
    (89) parameters -> . parameters COMMA parameter
    (90) parameters -> . parameters COMMA
    (91) parameters -> . parameter
    (92) parameters -> .
    (93) parameter -> . IDENTIFIER ARROW type
    (94) parameter -> . IDENTIFIER

    RPAREN          reduce using rule 92 (parameters -> .)
    COMMA           reduce using rule 92 (parameters -> .)
    IDENTIFIER      shift and go to state 110

    parameters                     shift and go to state 108
    parameter                      shift and go to state 109

state 64

    (117) expression -> LPAREN expression . RPAREN
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 65

    (86) expression -> FN . LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> FN . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 63


state 66

    (120) expression -> IDENTIFIER .
    (121) expression -> IDENTIFIER . LPAREN arguments RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 120 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 120 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 120 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 120 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 120 (expression -> IDENTIFIER .)
    LT              reduce using rule 120 (expression -> IDENTIFIER .)
    GT              reduce using rule 120 (expression -> IDENTIFIER .)
    LEQ             reduce using rule 120 (expression -> IDENTIFIER .)
    GEQ             reduce using rule 120 (expression -> IDENTIFIER .)
    EQ              reduce using rule 120 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 120 (expression -> IDENTIFIER .)
    AND             reduce using rule 120 (expression -> IDENTIFIER .)
    OR              reduce using rule 120 (expression -> IDENTIFIER .)
    DOT             reduce using rule 120 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 120 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 120 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 120 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 120 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 120 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 42

  ! LPAREN          [ reduce using rule 120 (expression -> IDENTIFIER .) ]


state 67

    (36) struct_declaration -> STRUCT IDENTIFIER . LBRACE struct_members RBRACE

    LBRACE          shift and go to state 113


state 68

    (46) enum_declaration -> ENUM IDENTIFIER . LBRACE enum_variants_opt RBRACE

    LBRACE          shift and go to state 114


state 69

    (70) print_statement -> PRINT DOT . INFO LPAREN expression RPAREN SEMICOLON

    INFO            shift and go to state 115


state 70

    (76) if_statement -> IF expression . block else_clause
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER
    (75) block -> . LBRACE statements RBRACE

    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112
    LBRACE          shift and go to state 117

    block                          shift and go to state 116

state 71

    (77) if_statement -> IF LPAREN . expression RPAREN block else_clause
    (117) expression -> LPAREN . expression RPAREN
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 118

state 72

    (81) return_statement -> RETURN expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 119
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 73

    (82) return_statement -> RETURN SEMICOLON .

    LET             reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    MUT             reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    CONST           reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    FN              reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    STRUCT          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    ENUM            reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    MATCH           reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    IMPORT          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    LBRACKET        reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    AT              reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    $end            reduce using rule 82 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 82 (return_statement -> RETURN SEMICOLON .)


state 74

    (83) assignment -> assignment_expression SEMICOLON .

    LET             reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    MUT             reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    CONST           reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    FN              reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    STRUCT          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    ENUM            reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    PRINT           reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    IF              reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    RETURN          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    MATCH           reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    IMPORT          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    LBRACKET        reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    MINUS           reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    LPAREN          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    NUMBER          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    STRING          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    AT              reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    $end            reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)
    RBRACE          reduce using rule 83 (assignment -> assignment_expression SEMICOLON .)


state 75

    (16) match_statement -> MATCH expression . LBRACE match_arms RBRACE
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    LBRACE          shift and go to state 120
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 76

    (71) import_statement -> IMPORT LBRACE . import_items RBRACE FROM STRING SEMICOLON
    (72) import_items -> . import_items COMMA IDENTIFIER
    (73) import_items -> . IDENTIFIER
    (74) import_items -> .

    IDENTIFIER      shift and go to state 122
    RBRACE          reduce using rule 74 (import_items -> .)
    COMMA           reduce using rule 74 (import_items -> .)

    import_items                   shift and go to state 121

state 77

    (30) assignment_expression -> lvalue ASSIGN . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 123

state 78

    (31) assignment_expression -> lvalue PLUS_ASSIGN . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 124

state 79

    (32) assignment_expression -> lvalue MINUS_ASSIGN . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 125

state 80

    (33) assignment_expression -> lvalue MULTIPLY_ASSIGN . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 126

state 81

    (34) assignment_expression -> lvalue DIVIDE_ASSIGN . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 127

state 82

    (99) expression -> LBRACKET elements . RBRACKET
    (100) elements -> elements . COMMA expression
    (101) elements -> elements . COMMA

    RBRACKET        shift and go to state 128
    COMMA           shift and go to state 129


state 83

    (102) elements -> expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RBRACKET        reduce using rule 102 (elements -> expression .)
    COMMA           reduce using rule 102 (elements -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 84

    (116) expression -> MINUS expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 116 (expression -> MINUS expression .)
    PLUS            reduce using rule 116 (expression -> MINUS expression .)
    MINUS           reduce using rule 116 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 116 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 116 (expression -> MINUS expression .)
    LT              reduce using rule 116 (expression -> MINUS expression .)
    GT              reduce using rule 116 (expression -> MINUS expression .)
    LEQ             reduce using rule 116 (expression -> MINUS expression .)
    GEQ             reduce using rule 116 (expression -> MINUS expression .)
    EQ              reduce using rule 116 (expression -> MINUS expression .)
    NEQ             reduce using rule 116 (expression -> MINUS expression .)
    AND             reduce using rule 116 (expression -> MINUS expression .)
    OR              reduce using rule 116 (expression -> MINUS expression .)
    LPAREN          reduce using rule 116 (expression -> MINUS expression .)
    DOT             reduce using rule 116 (expression -> MINUS expression .)
    RPAREN          reduce using rule 116 (expression -> MINUS expression .)
    LBRACE          reduce using rule 116 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 116 (expression -> MINUS expression .)
    COMMA           reduce using rule 116 (expression -> MINUS expression .)
    RBRACE          reduce using rule 116 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! MULTIPLY        [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! LPAREN          [ shift and go to state 56 ]
  ! DOT             [ shift and go to state 112 ]


state 85

    (58) decorator -> AT IDENTIFIER .

    FN              reduce using rule 58 (decorator -> AT IDENTIFIER .)
    AT              reduce using rule 58 (decorator -> AT IDENTIFIER .)


state 86

    (60) variable_declaration -> LET mut_opt IDENTIFIER . ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> LET mut_opt IDENTIFIER . ASSIGN expression SEMICOLON

    ARROW           shift and go to state 130
    ASSIGN          shift and go to state 131


state 87

    (121) expression -> IDENTIFIER LPAREN arguments . RPAREN
    (124) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 132
    COMMA           shift and go to state 133


state 88

    (125) arguments -> expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RPAREN          reduce using rule 125 (arguments -> expression .)
    COMMA           reduce using rule 125 (arguments -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 89

    (104) expression -> expression PLUS expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 104 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 104 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 104 (expression -> expression PLUS expression .)
    LT              reduce using rule 104 (expression -> expression PLUS expression .)
    GT              reduce using rule 104 (expression -> expression PLUS expression .)
    LEQ             reduce using rule 104 (expression -> expression PLUS expression .)
    GEQ             reduce using rule 104 (expression -> expression PLUS expression .)
    EQ              reduce using rule 104 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 104 (expression -> expression PLUS expression .)
    AND             reduce using rule 104 (expression -> expression PLUS expression .)
    OR              reduce using rule 104 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 104 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 104 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 104 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 104 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 104 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! MULTIPLY        [ reduce using rule 104 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 104 (expression -> expression PLUS expression .) ]
  ! LPAREN          [ reduce using rule 104 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 104 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 90

    (105) expression -> expression MINUS expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 105 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 105 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 105 (expression -> expression MINUS expression .)
    LT              reduce using rule 105 (expression -> expression MINUS expression .)
    GT              reduce using rule 105 (expression -> expression MINUS expression .)
    LEQ             reduce using rule 105 (expression -> expression MINUS expression .)
    GEQ             reduce using rule 105 (expression -> expression MINUS expression .)
    EQ              reduce using rule 105 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 105 (expression -> expression MINUS expression .)
    AND             reduce using rule 105 (expression -> expression MINUS expression .)
    OR              reduce using rule 105 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 105 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 105 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 105 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 105 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 105 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! MULTIPLY        [ reduce using rule 105 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 105 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 105 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 105 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 91

    (106) expression -> expression MULTIPLY expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 106 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 106 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 106 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 106 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 106 (expression -> expression MULTIPLY expression .)
    LT              reduce using rule 106 (expression -> expression MULTIPLY expression .)
    GT              reduce using rule 106 (expression -> expression MULTIPLY expression .)
    LEQ             reduce using rule 106 (expression -> expression MULTIPLY expression .)
    GEQ             reduce using rule 106 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 106 (expression -> expression MULTIPLY expression .)
    NEQ             reduce using rule 106 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 106 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 106 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 106 (expression -> expression MULTIPLY expression .)
    LBRACE          reduce using rule 106 (expression -> expression MULTIPLY expression .)
    RBRACKET        reduce using rule 106 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 106 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 106 (expression -> expression MULTIPLY expression .)
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! LPAREN          [ reduce using rule 106 (expression -> expression MULTIPLY expression .) ]
  ! DOT             [ reduce using rule 106 (expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! MULTIPLY        [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 92

    (107) expression -> expression DIVIDE expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 107 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 107 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 107 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 107 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 107 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 107 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 107 (expression -> expression DIVIDE expression .)
    LEQ             reduce using rule 107 (expression -> expression DIVIDE expression .)
    GEQ             reduce using rule 107 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 107 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 107 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 107 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 107 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 107 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 107 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 107 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 107 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 107 (expression -> expression DIVIDE expression .)
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! LPAREN          [ reduce using rule 107 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 107 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! MULTIPLY        [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 93

    (108) expression -> expression LT expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 108 (expression -> expression LT expression .)
    LT              reduce using rule 108 (expression -> expression LT expression .)
    GT              reduce using rule 108 (expression -> expression LT expression .)
    LEQ             reduce using rule 108 (expression -> expression LT expression .)
    GEQ             reduce using rule 108 (expression -> expression LT expression .)
    EQ              reduce using rule 108 (expression -> expression LT expression .)
    NEQ             reduce using rule 108 (expression -> expression LT expression .)
    AND             reduce using rule 108 (expression -> expression LT expression .)
    OR              reduce using rule 108 (expression -> expression LT expression .)
    RPAREN          reduce using rule 108 (expression -> expression LT expression .)
    LBRACE          reduce using rule 108 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 108 (expression -> expression LT expression .)
    COMMA           reduce using rule 108 (expression -> expression LT expression .)
    RBRACE          reduce using rule 108 (expression -> expression LT expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 108 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 108 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 108 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 108 (expression -> expression LT expression .) ]
  ! LPAREN          [ reduce using rule 108 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 108 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 94

    (109) expression -> expression GT expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 109 (expression -> expression GT expression .)
    LT              reduce using rule 109 (expression -> expression GT expression .)
    GT              reduce using rule 109 (expression -> expression GT expression .)
    LEQ             reduce using rule 109 (expression -> expression GT expression .)
    GEQ             reduce using rule 109 (expression -> expression GT expression .)
    EQ              reduce using rule 109 (expression -> expression GT expression .)
    NEQ             reduce using rule 109 (expression -> expression GT expression .)
    AND             reduce using rule 109 (expression -> expression GT expression .)
    OR              reduce using rule 109 (expression -> expression GT expression .)
    RPAREN          reduce using rule 109 (expression -> expression GT expression .)
    LBRACE          reduce using rule 109 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 109 (expression -> expression GT expression .)
    COMMA           reduce using rule 109 (expression -> expression GT expression .)
    RBRACE          reduce using rule 109 (expression -> expression GT expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 109 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 109 (expression -> expression GT expression .) ]
  ! MULTIPLY        [ reduce using rule 109 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 109 (expression -> expression GT expression .) ]
  ! LPAREN          [ reduce using rule 109 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 109 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 95

    (110) expression -> expression LEQ expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 110 (expression -> expression LEQ expression .)
    LT              reduce using rule 110 (expression -> expression LEQ expression .)
    GT              reduce using rule 110 (expression -> expression LEQ expression .)
    LEQ             reduce using rule 110 (expression -> expression LEQ expression .)
    GEQ             reduce using rule 110 (expression -> expression LEQ expression .)
    EQ              reduce using rule 110 (expression -> expression LEQ expression .)
    NEQ             reduce using rule 110 (expression -> expression LEQ expression .)
    AND             reduce using rule 110 (expression -> expression LEQ expression .)
    OR              reduce using rule 110 (expression -> expression LEQ expression .)
    RPAREN          reduce using rule 110 (expression -> expression LEQ expression .)
    LBRACE          reduce using rule 110 (expression -> expression LEQ expression .)
    RBRACKET        reduce using rule 110 (expression -> expression LEQ expression .)
    COMMA           reduce using rule 110 (expression -> expression LEQ expression .)
    RBRACE          reduce using rule 110 (expression -> expression LEQ expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 110 (expression -> expression LEQ expression .) ]
  ! MINUS           [ reduce using rule 110 (expression -> expression LEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 110 (expression -> expression LEQ expression .) ]
  ! DIVIDE          [ reduce using rule 110 (expression -> expression LEQ expression .) ]
  ! LPAREN          [ reduce using rule 110 (expression -> expression LEQ expression .) ]
  ! DOT             [ reduce using rule 110 (expression -> expression LEQ expression .) ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 96

    (111) expression -> expression GEQ expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 111 (expression -> expression GEQ expression .)
    LT              reduce using rule 111 (expression -> expression GEQ expression .)
    GT              reduce using rule 111 (expression -> expression GEQ expression .)
    LEQ             reduce using rule 111 (expression -> expression GEQ expression .)
    GEQ             reduce using rule 111 (expression -> expression GEQ expression .)
    EQ              reduce using rule 111 (expression -> expression GEQ expression .)
    NEQ             reduce using rule 111 (expression -> expression GEQ expression .)
    AND             reduce using rule 111 (expression -> expression GEQ expression .)
    OR              reduce using rule 111 (expression -> expression GEQ expression .)
    RPAREN          reduce using rule 111 (expression -> expression GEQ expression .)
    LBRACE          reduce using rule 111 (expression -> expression GEQ expression .)
    RBRACKET        reduce using rule 111 (expression -> expression GEQ expression .)
    COMMA           reduce using rule 111 (expression -> expression GEQ expression .)
    RBRACE          reduce using rule 111 (expression -> expression GEQ expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 111 (expression -> expression GEQ expression .) ]
  ! MINUS           [ reduce using rule 111 (expression -> expression GEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 111 (expression -> expression GEQ expression .) ]
  ! DIVIDE          [ reduce using rule 111 (expression -> expression GEQ expression .) ]
  ! LPAREN          [ reduce using rule 111 (expression -> expression GEQ expression .) ]
  ! DOT             [ reduce using rule 111 (expression -> expression GEQ expression .) ]
  ! LT              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! LEQ             [ shift and go to state 50 ]
  ! GEQ             [ shift and go to state 51 ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 97

    (112) expression -> expression EQ expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 112 (expression -> expression EQ expression .)
    EQ              reduce using rule 112 (expression -> expression EQ expression .)
    NEQ             reduce using rule 112 (expression -> expression EQ expression .)
    AND             reduce using rule 112 (expression -> expression EQ expression .)
    OR              reduce using rule 112 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 112 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 112 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 112 (expression -> expression EQ expression .)
    COMMA           reduce using rule 112 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 112 (expression -> expression EQ expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! LPAREN          [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 112 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 98

    (113) expression -> expression NEQ expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 113 (expression -> expression NEQ expression .)
    EQ              reduce using rule 113 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 113 (expression -> expression NEQ expression .)
    AND             reduce using rule 113 (expression -> expression NEQ expression .)
    OR              reduce using rule 113 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 113 (expression -> expression NEQ expression .)
    LBRACE          reduce using rule 113 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 113 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 113 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 113 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 113 (expression -> expression NEQ expression .) ]
  ! EQ              [ shift and go to state 52 ]
  ! NEQ             [ shift and go to state 53 ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 99

    (114) expression -> expression AND expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 114 (expression -> expression AND expression .)
    AND             reduce using rule 114 (expression -> expression AND expression .)
    OR              reduce using rule 114 (expression -> expression AND expression .)
    RPAREN          reduce using rule 114 (expression -> expression AND expression .)
    LBRACE          reduce using rule 114 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 114 (expression -> expression AND expression .)
    COMMA           reduce using rule 114 (expression -> expression AND expression .)
    RBRACE          reduce using rule 114 (expression -> expression AND expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! LEQ             [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! GEQ             [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 114 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]


state 100

    (115) expression -> expression OR expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 115 (expression -> expression OR expression .)
    OR              reduce using rule 115 (expression -> expression OR expression .)
    RPAREN          reduce using rule 115 (expression -> expression OR expression .)
    LBRACE          reduce using rule 115 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 115 (expression -> expression OR expression .)
    COMMA           reduce using rule 115 (expression -> expression OR expression .)
    RBRACE          reduce using rule 115 (expression -> expression OR expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112

  ! PLUS            [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! LEQ             [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! GEQ             [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 115 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 55 ]


state 101

    (122) expression -> expression LPAREN arguments . RPAREN
    (124) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 134
    COMMA           shift and go to state 133


state 102

    (123) expression -> expression DOT IDENTIFIER .
    (85) lvalue -> expression DOT IDENTIFIER .

    SEMICOLON       reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    PLUS            reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    MINUS           reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    DIVIDE          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LT              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    GT              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LEQ             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    GEQ             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    EQ              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    NEQ             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    AND             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    OR              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LPAREN          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    DOT             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    COMMA           reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    RBRACE          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    ASSIGN          reduce using rule 85 (lvalue -> expression DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 85 (lvalue -> expression DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 85 (lvalue -> expression DOT IDENTIFIER .)
    MULTIPLY_ASSIGN reduce using rule 85 (lvalue -> expression DOT IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 85 (lvalue -> expression DOT IDENTIFIER .)


state 103

    (62) variable_declaration -> MUT IDENTIFIER ARROW . type ASSIGN expression SEMICOLON
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 136

state 104

    (63) variable_declaration -> MUT IDENTIFIER ASSIGN . expression SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 137

state 105

    (59) constant_declaration -> CONST LET IDENTIFIER . ARROW type ASSIGN expression SEMICOLON

    ARROW           shift and go to state 138


state 106

    (66) function_declaration -> decorators FN IDENTIFIER . LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> decorators FN IDENTIFIER . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 139


state 107

    (68) function_declaration -> FN IDENTIFIER LPAREN . parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> FN IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (89) parameters -> . parameters COMMA parameter
    (90) parameters -> . parameters COMMA
    (91) parameters -> . parameter
    (92) parameters -> .
    (93) parameter -> . IDENTIFIER ARROW type
    (94) parameter -> . IDENTIFIER

    RPAREN          reduce using rule 92 (parameters -> .)
    COMMA           reduce using rule 92 (parameters -> .)
    IDENTIFIER      shift and go to state 110

    parameters                     shift and go to state 140
    parameter                      shift and go to state 109

state 108

    (86) expression -> FN LPAREN parameters . RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> FN LPAREN parameters . RPAREN LBRACE statements RBRACE
    (89) parameters -> parameters . COMMA parameter
    (90) parameters -> parameters . COMMA

    RPAREN          shift and go to state 141
    COMMA           shift and go to state 142


state 109

    (91) parameters -> parameter .

    RPAREN          reduce using rule 91 (parameters -> parameter .)
    COMMA           reduce using rule 91 (parameters -> parameter .)


state 110

    (93) parameter -> IDENTIFIER . ARROW type
    (94) parameter -> IDENTIFIER .

    ARROW           shift and go to state 143
    RPAREN          reduce using rule 94 (parameter -> IDENTIFIER .)
    COMMA           reduce using rule 94 (parameter -> IDENTIFIER .)


state 111

    (117) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 117 (expression -> LPAREN expression RPAREN .)


state 112

    (123) expression -> expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 144


state 113

    (36) struct_declaration -> STRUCT IDENTIFIER LBRACE . struct_members RBRACE
    (37) struct_members -> . struct_members struct_member
    (38) struct_members -> . struct_member
    (39) struct_member -> . mut_field_declaration
    (40) struct_member -> . field_declaration
    (41) struct_member -> . method_declaration
    (44) mut_field_declaration -> . MUT LET IDENTIFIER ARROW type SEMICOLON
    (45) field_declaration -> . LET IDENTIFIER ARROW type SEMICOLON
    (42) method_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (43) method_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (58) decorator -> . AT IDENTIFIER

    MUT             shift and go to state 150
    LET             shift and go to state 151
    FN              shift and go to state 153
    AT              shift and go to state 38

    struct_members                 shift and go to state 145
    struct_member                  shift and go to state 146
    mut_field_declaration          shift and go to state 147
    field_declaration              shift and go to state 148
    method_declaration             shift and go to state 149
    decorators                     shift and go to state 152
    decorator                      shift and go to state 33

state 114

    (46) enum_declaration -> ENUM IDENTIFIER LBRACE . enum_variants_opt RBRACE
    (47) enum_variants_opt -> . enum_variants
    (48) enum_variants_opt -> . empty
    (49) enum_variants -> . enum_variant_list maybe_trailing_comma
    (127) empty -> .
    (50) enum_variant_list -> . enum_variant
    (51) enum_variant_list -> . enum_variant_list COMMA enum_variant
    (54) enum_variant -> . IDENTIFIER LBRACE struct_members RBRACE
    (55) enum_variant -> . IDENTIFIER

    RBRACE          reduce using rule 127 (empty -> .)
    IDENTIFIER      shift and go to state 154

    enum_variants_opt              shift and go to state 155
    enum_variants                  shift and go to state 156
    empty                          shift and go to state 157
    enum_variant_list              shift and go to state 158
    enum_variant                   shift and go to state 159

state 115

    (70) print_statement -> PRINT DOT INFO . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 160


state 116

    (76) if_statement -> IF expression block . else_clause
    (78) else_clause -> . ELSE if_statement
    (79) else_clause -> . ELSE block
    (80) else_clause -> .

    ELSE            shift and go to state 162
    LET             reduce using rule 80 (else_clause -> .)
    MUT             reduce using rule 80 (else_clause -> .)
    CONST           reduce using rule 80 (else_clause -> .)
    FN              reduce using rule 80 (else_clause -> .)
    STRUCT          reduce using rule 80 (else_clause -> .)
    ENUM            reduce using rule 80 (else_clause -> .)
    PRINT           reduce using rule 80 (else_clause -> .)
    IF              reduce using rule 80 (else_clause -> .)
    RETURN          reduce using rule 80 (else_clause -> .)
    MATCH           reduce using rule 80 (else_clause -> .)
    IMPORT          reduce using rule 80 (else_clause -> .)
    LBRACKET        reduce using rule 80 (else_clause -> .)
    MINUS           reduce using rule 80 (else_clause -> .)
    LPAREN          reduce using rule 80 (else_clause -> .)
    NUMBER          reduce using rule 80 (else_clause -> .)
    STRING          reduce using rule 80 (else_clause -> .)
    IDENTIFIER      reduce using rule 80 (else_clause -> .)
    AT              reduce using rule 80 (else_clause -> .)
    $end            reduce using rule 80 (else_clause -> .)
    RBRACE          reduce using rule 80 (else_clause -> .)

    else_clause                    shift and go to state 161

state 117

    (75) block -> LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statements                     shift and go to state 163
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 118

    (77) if_statement -> IF LPAREN expression . RPAREN block else_clause
    (117) expression -> LPAREN expression . RPAREN
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RPAREN          shift and go to state 164
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 119

    (81) return_statement -> RETURN expression SEMICOLON .

    LET             reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    MUT             reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    CONST           reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    FN              reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    STRUCT          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    ENUM            reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    MATCH           reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    IMPORT          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    AT              reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 81 (return_statement -> RETURN expression SEMICOLON .)


state 120

    (16) match_statement -> MATCH expression LBRACE . match_arms RBRACE
    (17) match_arms -> .
    (18) match_arms -> . match_arm_list maybe_comma
    (19) match_arm_list -> . match_arm
    (20) match_arm_list -> . match_arm_list COMMA match_arm
    (23) match_arm -> . pattern ARROW inline_statement
    (27) pattern -> . MINUS NUMBER
    (28) pattern -> . NUMBER
    (29) pattern -> . UNDERSCORE

    RBRACE          reduce using rule 17 (match_arms -> .)
    MINUS           shift and go to state 169
    NUMBER          shift and go to state 170
    UNDERSCORE      shift and go to state 171

    match_arms                     shift and go to state 165
    match_arm_list                 shift and go to state 166
    match_arm                      shift and go to state 167
    pattern                        shift and go to state 168

state 121

    (71) import_statement -> IMPORT LBRACE import_items . RBRACE FROM STRING SEMICOLON
    (72) import_items -> import_items . COMMA IDENTIFIER

    RBRACE          shift and go to state 172
    COMMA           shift and go to state 173


state 122

    (73) import_items -> IDENTIFIER .

    RBRACE          reduce using rule 73 (import_items -> IDENTIFIER .)
    COMMA           reduce using rule 73 (import_items -> IDENTIFIER .)


state 123

    (30) assignment_expression -> lvalue ASSIGN expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 30 (assignment_expression -> lvalue ASSIGN expression .)
    COMMA           reduce using rule 30 (assignment_expression -> lvalue ASSIGN expression .)
    RBRACE          reduce using rule 30 (assignment_expression -> lvalue ASSIGN expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 124

    (31) assignment_expression -> lvalue PLUS_ASSIGN expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 31 (assignment_expression -> lvalue PLUS_ASSIGN expression .)
    COMMA           reduce using rule 31 (assignment_expression -> lvalue PLUS_ASSIGN expression .)
    RBRACE          reduce using rule 31 (assignment_expression -> lvalue PLUS_ASSIGN expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 125

    (32) assignment_expression -> lvalue MINUS_ASSIGN expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 32 (assignment_expression -> lvalue MINUS_ASSIGN expression .)
    COMMA           reduce using rule 32 (assignment_expression -> lvalue MINUS_ASSIGN expression .)
    RBRACE          reduce using rule 32 (assignment_expression -> lvalue MINUS_ASSIGN expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 126

    (33) assignment_expression -> lvalue MULTIPLY_ASSIGN expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 33 (assignment_expression -> lvalue MULTIPLY_ASSIGN expression .)
    COMMA           reduce using rule 33 (assignment_expression -> lvalue MULTIPLY_ASSIGN expression .)
    RBRACE          reduce using rule 33 (assignment_expression -> lvalue MULTIPLY_ASSIGN expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 127

    (34) assignment_expression -> lvalue DIVIDE_ASSIGN expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       reduce using rule 34 (assignment_expression -> lvalue DIVIDE_ASSIGN expression .)
    COMMA           reduce using rule 34 (assignment_expression -> lvalue DIVIDE_ASSIGN expression .)
    RBRACE          reduce using rule 34 (assignment_expression -> lvalue DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 128

    (99) expression -> LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    MULTIPLY        reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    LT              reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    GT              reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    LEQ             reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    GEQ             reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    EQ              reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    NEQ             reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    AND             reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    OR              reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    LPAREN          reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    DOT             reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    LBRACE          reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)
    RBRACE          reduce using rule 99 (expression -> LBRACKET elements RBRACKET .)


state 129

    (100) elements -> elements COMMA . expression
    (101) elements -> elements COMMA .
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    RBRACKET        reduce using rule 101 (elements -> elements COMMA .)
    COMMA           reduce using rule 101 (elements -> elements COMMA .)
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 174

state 130

    (60) variable_declaration -> LET mut_opt IDENTIFIER ARROW . type ASSIGN expression SEMICOLON
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 175

state 131

    (61) variable_declaration -> LET mut_opt IDENTIFIER ASSIGN . expression SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 176

state 132

    (121) expression -> IDENTIFIER LPAREN arguments RPAREN .

    SEMICOLON       reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    PLUS            reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    MINUS           reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    MULTIPLY        reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LT              reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    GT              reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LEQ             reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    GEQ             reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    EQ              reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    NEQ             reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    AND             reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    OR              reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    DOT             reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LBRACE          reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    COMMA           reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 121 (expression -> IDENTIFIER LPAREN arguments RPAREN .)


state 133

    (124) arguments -> arguments COMMA . expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 177

state 134

    (122) expression -> expression LPAREN arguments RPAREN .

    SEMICOLON       reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    PLUS            reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    MINUS           reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    MULTIPLY        reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    LT              reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    GT              reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    LEQ             reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    GEQ             reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    EQ              reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    NEQ             reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    AND             reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    OR              reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    DOT             reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    LBRACE          reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    COMMA           reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 122 (expression -> expression LPAREN arguments RPAREN .)


state 135

    (95) type -> IDENTIFIER .

    ASSIGN          reduce using rule 95 (type -> IDENTIFIER .)
    LT              reduce using rule 95 (type -> IDENTIFIER .)
    RPAREN          reduce using rule 95 (type -> IDENTIFIER .)
    COMMA           reduce using rule 95 (type -> IDENTIFIER .)
    GT              reduce using rule 95 (type -> IDENTIFIER .)
    LBRACE          reduce using rule 95 (type -> IDENTIFIER .)
    SEMICOLON       reduce using rule 95 (type -> IDENTIFIER .)


state 136

    (62) variable_declaration -> MUT IDENTIFIER ARROW type . ASSIGN expression SEMICOLON
    (96) type -> type . LT type_list GT

    ASSIGN          shift and go to state 178
    LT              shift and go to state 179


state 137

    (63) variable_declaration -> MUT IDENTIFIER ASSIGN expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 180
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 138

    (59) constant_declaration -> CONST LET IDENTIFIER ARROW . type ASSIGN expression SEMICOLON
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 181

state 139

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN . parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> decorators FN IDENTIFIER LPAREN . parameters RPAREN LBRACE statements RBRACE
    (89) parameters -> . parameters COMMA parameter
    (90) parameters -> . parameters COMMA
    (91) parameters -> . parameter
    (92) parameters -> .
    (93) parameter -> . IDENTIFIER ARROW type
    (94) parameter -> . IDENTIFIER

    RPAREN          reduce using rule 92 (parameters -> .)
    COMMA           reduce using rule 92 (parameters -> .)
    IDENTIFIER      shift and go to state 110

    parameters                     shift and go to state 182
    parameter                      shift and go to state 109

state 140

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters . RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> FN IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE
    (89) parameters -> parameters . COMMA parameter
    (90) parameters -> parameters . COMMA

    RPAREN          shift and go to state 183
    COMMA           shift and go to state 142


state 141

    (86) expression -> FN LPAREN parameters RPAREN . ARROW type LBRACE statements RBRACE
    (87) expression -> FN LPAREN parameters RPAREN . LBRACE statements RBRACE

    ARROW           shift and go to state 184
    LBRACE          shift and go to state 185


state 142

    (89) parameters -> parameters COMMA . parameter
    (90) parameters -> parameters COMMA .
    (93) parameter -> . IDENTIFIER ARROW type
    (94) parameter -> . IDENTIFIER

    RPAREN          reduce using rule 90 (parameters -> parameters COMMA .)
    COMMA           reduce using rule 90 (parameters -> parameters COMMA .)
    IDENTIFIER      shift and go to state 110

    parameter                      shift and go to state 186

state 143

    (93) parameter -> IDENTIFIER ARROW . type
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 187

state 144

    (123) expression -> expression DOT IDENTIFIER .

    RPAREN          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    PLUS            reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    MINUS           reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    DIVIDE          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LT              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    GT              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LEQ             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    GEQ             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    EQ              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    NEQ             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    AND             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    OR              reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LPAREN          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    DOT             reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    LBRACE          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    COMMA           reduce using rule 123 (expression -> expression DOT IDENTIFIER .)
    RBRACE          reduce using rule 123 (expression -> expression DOT IDENTIFIER .)


state 145

    (36) struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members . RBRACE
    (37) struct_members -> struct_members . struct_member
    (39) struct_member -> . mut_field_declaration
    (40) struct_member -> . field_declaration
    (41) struct_member -> . method_declaration
    (44) mut_field_declaration -> . MUT LET IDENTIFIER ARROW type SEMICOLON
    (45) field_declaration -> . LET IDENTIFIER ARROW type SEMICOLON
    (42) method_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (43) method_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (58) decorator -> . AT IDENTIFIER

    RBRACE          shift and go to state 188
    MUT             shift and go to state 150
    LET             shift and go to state 151
    FN              shift and go to state 153
    AT              shift and go to state 38

    struct_member                  shift and go to state 189
    mut_field_declaration          shift and go to state 147
    field_declaration              shift and go to state 148
    method_declaration             shift and go to state 149
    decorators                     shift and go to state 152
    decorator                      shift and go to state 33

state 146

    (38) struct_members -> struct_member .

    RBRACE          reduce using rule 38 (struct_members -> struct_member .)
    MUT             reduce using rule 38 (struct_members -> struct_member .)
    LET             reduce using rule 38 (struct_members -> struct_member .)
    FN              reduce using rule 38 (struct_members -> struct_member .)
    AT              reduce using rule 38 (struct_members -> struct_member .)


state 147

    (39) struct_member -> mut_field_declaration .

    RBRACE          reduce using rule 39 (struct_member -> mut_field_declaration .)
    MUT             reduce using rule 39 (struct_member -> mut_field_declaration .)
    LET             reduce using rule 39 (struct_member -> mut_field_declaration .)
    FN              reduce using rule 39 (struct_member -> mut_field_declaration .)
    AT              reduce using rule 39 (struct_member -> mut_field_declaration .)


state 148

    (40) struct_member -> field_declaration .

    RBRACE          reduce using rule 40 (struct_member -> field_declaration .)
    MUT             reduce using rule 40 (struct_member -> field_declaration .)
    LET             reduce using rule 40 (struct_member -> field_declaration .)
    FN              reduce using rule 40 (struct_member -> field_declaration .)
    AT              reduce using rule 40 (struct_member -> field_declaration .)


state 149

    (41) struct_member -> method_declaration .

    RBRACE          reduce using rule 41 (struct_member -> method_declaration .)
    MUT             reduce using rule 41 (struct_member -> method_declaration .)
    LET             reduce using rule 41 (struct_member -> method_declaration .)
    FN              reduce using rule 41 (struct_member -> method_declaration .)
    AT              reduce using rule 41 (struct_member -> method_declaration .)


state 150

    (44) mut_field_declaration -> MUT . LET IDENTIFIER ARROW type SEMICOLON

    LET             shift and go to state 190


state 151

    (45) field_declaration -> LET . IDENTIFIER ARROW type SEMICOLON

    IDENTIFIER      shift and go to state 191


state 152

    (42) method_declaration -> decorators . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (56) decorators -> decorators . decorator
    (58) decorator -> . AT IDENTIFIER

    FN              shift and go to state 192
    AT              shift and go to state 38

    decorator                      shift and go to state 61

state 153

    (43) method_declaration -> FN . IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 193


state 154

    (54) enum_variant -> IDENTIFIER . LBRACE struct_members RBRACE
    (55) enum_variant -> IDENTIFIER .

    LBRACE          shift and go to state 194
    COMMA           reduce using rule 55 (enum_variant -> IDENTIFIER .)
    RBRACE          reduce using rule 55 (enum_variant -> IDENTIFIER .)


state 155

    (46) enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt . RBRACE

    RBRACE          shift and go to state 195


state 156

    (47) enum_variants_opt -> enum_variants .

    RBRACE          reduce using rule 47 (enum_variants_opt -> enum_variants .)


state 157

    (48) enum_variants_opt -> empty .

    RBRACE          reduce using rule 48 (enum_variants_opt -> empty .)


state 158

    (49) enum_variants -> enum_variant_list . maybe_trailing_comma
    (51) enum_variant_list -> enum_variant_list . COMMA enum_variant
    (52) maybe_trailing_comma -> . COMMA
    (53) maybe_trailing_comma -> . empty
    (127) empty -> .

    COMMA           shift and go to state 197
    RBRACE          reduce using rule 127 (empty -> .)

    maybe_trailing_comma           shift and go to state 196
    empty                          shift and go to state 198

state 159

    (50) enum_variant_list -> enum_variant .

    COMMA           reduce using rule 50 (enum_variant_list -> enum_variant .)
    RBRACE          reduce using rule 50 (enum_variant_list -> enum_variant .)


state 160

    (70) print_statement -> PRINT DOT INFO LPAREN . expression RPAREN SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 199

state 161

    (76) if_statement -> IF expression block else_clause .

    LET             reduce using rule 76 (if_statement -> IF expression block else_clause .)
    MUT             reduce using rule 76 (if_statement -> IF expression block else_clause .)
    CONST           reduce using rule 76 (if_statement -> IF expression block else_clause .)
    FN              reduce using rule 76 (if_statement -> IF expression block else_clause .)
    STRUCT          reduce using rule 76 (if_statement -> IF expression block else_clause .)
    ENUM            reduce using rule 76 (if_statement -> IF expression block else_clause .)
    PRINT           reduce using rule 76 (if_statement -> IF expression block else_clause .)
    IF              reduce using rule 76 (if_statement -> IF expression block else_clause .)
    RETURN          reduce using rule 76 (if_statement -> IF expression block else_clause .)
    MATCH           reduce using rule 76 (if_statement -> IF expression block else_clause .)
    IMPORT          reduce using rule 76 (if_statement -> IF expression block else_clause .)
    LBRACKET        reduce using rule 76 (if_statement -> IF expression block else_clause .)
    MINUS           reduce using rule 76 (if_statement -> IF expression block else_clause .)
    LPAREN          reduce using rule 76 (if_statement -> IF expression block else_clause .)
    NUMBER          reduce using rule 76 (if_statement -> IF expression block else_clause .)
    STRING          reduce using rule 76 (if_statement -> IF expression block else_clause .)
    IDENTIFIER      reduce using rule 76 (if_statement -> IF expression block else_clause .)
    AT              reduce using rule 76 (if_statement -> IF expression block else_clause .)
    $end            reduce using rule 76 (if_statement -> IF expression block else_clause .)
    RBRACE          reduce using rule 76 (if_statement -> IF expression block else_clause .)


state 162

    (78) else_clause -> ELSE . if_statement
    (79) else_clause -> ELSE . block
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (75) block -> . LBRACE statements RBRACE

    IF              shift and go to state 27
    LBRACE          shift and go to state 117

    if_statement                   shift and go to state 200
    block                          shift and go to state 201

state 163

    (75) block -> LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 202
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 164

    (77) if_statement -> IF LPAREN expression RPAREN . block else_clause
    (117) expression -> LPAREN expression RPAREN .
    (75) block -> . LBRACE statements RBRACE

    PLUS            reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 117 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 117 (expression -> LPAREN expression RPAREN .)

  ! LBRACE          [ shift and go to state 117 ]

    block                          shift and go to state 203

state 165

    (16) match_statement -> MATCH expression LBRACE match_arms . RBRACE

    RBRACE          shift and go to state 204


state 166

    (18) match_arms -> match_arm_list . maybe_comma
    (20) match_arm_list -> match_arm_list . COMMA match_arm
    (21) maybe_comma -> . COMMA
    (22) maybe_comma -> . empty
    (127) empty -> .

    COMMA           shift and go to state 206
    RBRACE          reduce using rule 127 (empty -> .)

    maybe_comma                    shift and go to state 205
    empty                          shift and go to state 207

state 167

    (19) match_arm_list -> match_arm .

    COMMA           reduce using rule 19 (match_arm_list -> match_arm .)
    RBRACE          reduce using rule 19 (match_arm_list -> match_arm .)


state 168

    (23) match_arm -> pattern . ARROW inline_statement

    ARROW           shift and go to state 208


state 169

    (27) pattern -> MINUS . NUMBER

    NUMBER          shift and go to state 209


state 170

    (28) pattern -> NUMBER .

    ARROW           reduce using rule 28 (pattern -> NUMBER .)


state 171

    (29) pattern -> UNDERSCORE .

    ARROW           reduce using rule 29 (pattern -> UNDERSCORE .)


state 172

    (71) import_statement -> IMPORT LBRACE import_items RBRACE . FROM STRING SEMICOLON

    FROM            shift and go to state 210


state 173

    (72) import_items -> import_items COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 211


state 174

    (100) elements -> elements COMMA expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RBRACKET        reduce using rule 100 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 100 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 175

    (60) variable_declaration -> LET mut_opt IDENTIFIER ARROW type . ASSIGN expression SEMICOLON
    (96) type -> type . LT type_list GT

    ASSIGN          shift and go to state 212
    LT              shift and go to state 179


state 176

    (61) variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 213
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 177

    (124) arguments -> arguments COMMA expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RPAREN          reduce using rule 124 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 124 (arguments -> arguments COMMA expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 178

    (62) variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN . expression SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 214

state 179

    (96) type -> type LT . type_list GT
    (97) type_list -> . type_list COMMA type
    (98) type_list -> . type
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 215
    type_list                      shift and go to state 216

state 180

    (63) variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .

    LET             reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    MUT             reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    FN              reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    STRUCT          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    ENUM            reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    MATCH           reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    IMPORT          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    AT              reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 63 (variable_declaration -> MUT IDENTIFIER ASSIGN expression SEMICOLON .)


state 181

    (59) constant_declaration -> CONST LET IDENTIFIER ARROW type . ASSIGN expression SEMICOLON
    (96) type -> type . LT type_list GT

    ASSIGN          shift and go to state 217
    LT              shift and go to state 179


state 182

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters . RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> decorators FN IDENTIFIER LPAREN parameters . RPAREN LBRACE statements RBRACE
    (89) parameters -> parameters . COMMA parameter
    (90) parameters -> parameters . COMMA

    RPAREN          shift and go to state 218
    COMMA           shift and go to state 142


state 183

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN . ARROW type LBRACE statements RBRACE
    (69) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    ARROW           shift and go to state 219
    LBRACE          shift and go to state 220


state 184

    (86) expression -> FN LPAREN parameters RPAREN ARROW . type LBRACE statements RBRACE
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 221

state 185

    (87) expression -> FN LPAREN parameters RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statements                     shift and go to state 222
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 186

    (89) parameters -> parameters COMMA parameter .

    RPAREN          reduce using rule 89 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 89 (parameters -> parameters COMMA parameter .)


state 187

    (93) parameter -> IDENTIFIER ARROW type .
    (96) type -> type . LT type_list GT

    RPAREN          reduce using rule 93 (parameter -> IDENTIFIER ARROW type .)
    COMMA           reduce using rule 93 (parameter -> IDENTIFIER ARROW type .)
    LT              shift and go to state 179


state 188

    (36) struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .

    LET             reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    MUT             reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    CONST           reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    FN              reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    STRUCT          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    ENUM            reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    PRINT           reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    IF              reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    RETURN          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    MATCH           reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    IMPORT          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    LBRACKET        reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    MINUS           reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    LPAREN          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    NUMBER          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    STRING          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    IDENTIFIER      reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    AT              reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    $end            reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)
    RBRACE          reduce using rule 36 (struct_declaration -> STRUCT IDENTIFIER LBRACE struct_members RBRACE .)


state 189

    (37) struct_members -> struct_members struct_member .

    RBRACE          reduce using rule 37 (struct_members -> struct_members struct_member .)
    MUT             reduce using rule 37 (struct_members -> struct_members struct_member .)
    LET             reduce using rule 37 (struct_members -> struct_members struct_member .)
    FN              reduce using rule 37 (struct_members -> struct_members struct_member .)
    AT              reduce using rule 37 (struct_members -> struct_members struct_member .)


state 190

    (44) mut_field_declaration -> MUT LET . IDENTIFIER ARROW type SEMICOLON

    IDENTIFIER      shift and go to state 223


state 191

    (45) field_declaration -> LET IDENTIFIER . ARROW type SEMICOLON

    ARROW           shift and go to state 224


state 192

    (42) method_declaration -> decorators FN . IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE

    IDENTIFIER      shift and go to state 225


state 193

    (43) method_declaration -> FN IDENTIFIER . LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE

    LPAREN          shift and go to state 226


state 194

    (54) enum_variant -> IDENTIFIER LBRACE . struct_members RBRACE
    (37) struct_members -> . struct_members struct_member
    (38) struct_members -> . struct_member
    (39) struct_member -> . mut_field_declaration
    (40) struct_member -> . field_declaration
    (41) struct_member -> . method_declaration
    (44) mut_field_declaration -> . MUT LET IDENTIFIER ARROW type SEMICOLON
    (45) field_declaration -> . LET IDENTIFIER ARROW type SEMICOLON
    (42) method_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (43) method_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (58) decorator -> . AT IDENTIFIER

    MUT             shift and go to state 150
    LET             shift and go to state 151
    FN              shift and go to state 153
    AT              shift and go to state 38

    struct_members                 shift and go to state 227
    struct_member                  shift and go to state 146
    mut_field_declaration          shift and go to state 147
    field_declaration              shift and go to state 148
    method_declaration             shift and go to state 149
    decorators                     shift and go to state 152
    decorator                      shift and go to state 33

state 195

    (46) enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .

    LET             reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    MUT             reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    CONST           reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    FN              reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    STRUCT          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    ENUM            reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    PRINT           reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    IF              reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    RETURN          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    MATCH           reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    IMPORT          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    LBRACKET        reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    MINUS           reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    LPAREN          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    NUMBER          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    STRING          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    IDENTIFIER      reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    AT              reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    $end            reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)
    RBRACE          reduce using rule 46 (enum_declaration -> ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE .)


state 196

    (49) enum_variants -> enum_variant_list maybe_trailing_comma .

    RBRACE          reduce using rule 49 (enum_variants -> enum_variant_list maybe_trailing_comma .)


state 197

    (51) enum_variant_list -> enum_variant_list COMMA . enum_variant
    (52) maybe_trailing_comma -> COMMA .
    (54) enum_variant -> . IDENTIFIER LBRACE struct_members RBRACE
    (55) enum_variant -> . IDENTIFIER

    RBRACE          reduce using rule 52 (maybe_trailing_comma -> COMMA .)
    IDENTIFIER      shift and go to state 154

    enum_variant                   shift and go to state 228

state 198

    (53) maybe_trailing_comma -> empty .

    RBRACE          reduce using rule 53 (maybe_trailing_comma -> empty .)


state 199

    (70) print_statement -> PRINT DOT INFO LPAREN expression . RPAREN SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RPAREN          shift and go to state 229
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 200

    (78) else_clause -> ELSE if_statement .

    LET             reduce using rule 78 (else_clause -> ELSE if_statement .)
    MUT             reduce using rule 78 (else_clause -> ELSE if_statement .)
    CONST           reduce using rule 78 (else_clause -> ELSE if_statement .)
    FN              reduce using rule 78 (else_clause -> ELSE if_statement .)
    STRUCT          reduce using rule 78 (else_clause -> ELSE if_statement .)
    ENUM            reduce using rule 78 (else_clause -> ELSE if_statement .)
    PRINT           reduce using rule 78 (else_clause -> ELSE if_statement .)
    IF              reduce using rule 78 (else_clause -> ELSE if_statement .)
    RETURN          reduce using rule 78 (else_clause -> ELSE if_statement .)
    MATCH           reduce using rule 78 (else_clause -> ELSE if_statement .)
    IMPORT          reduce using rule 78 (else_clause -> ELSE if_statement .)
    LBRACKET        reduce using rule 78 (else_clause -> ELSE if_statement .)
    MINUS           reduce using rule 78 (else_clause -> ELSE if_statement .)
    LPAREN          reduce using rule 78 (else_clause -> ELSE if_statement .)
    NUMBER          reduce using rule 78 (else_clause -> ELSE if_statement .)
    STRING          reduce using rule 78 (else_clause -> ELSE if_statement .)
    IDENTIFIER      reduce using rule 78 (else_clause -> ELSE if_statement .)
    AT              reduce using rule 78 (else_clause -> ELSE if_statement .)
    $end            reduce using rule 78 (else_clause -> ELSE if_statement .)
    RBRACE          reduce using rule 78 (else_clause -> ELSE if_statement .)


state 201

    (79) else_clause -> ELSE block .

    LET             reduce using rule 79 (else_clause -> ELSE block .)
    MUT             reduce using rule 79 (else_clause -> ELSE block .)
    CONST           reduce using rule 79 (else_clause -> ELSE block .)
    FN              reduce using rule 79 (else_clause -> ELSE block .)
    STRUCT          reduce using rule 79 (else_clause -> ELSE block .)
    ENUM            reduce using rule 79 (else_clause -> ELSE block .)
    PRINT           reduce using rule 79 (else_clause -> ELSE block .)
    IF              reduce using rule 79 (else_clause -> ELSE block .)
    RETURN          reduce using rule 79 (else_clause -> ELSE block .)
    MATCH           reduce using rule 79 (else_clause -> ELSE block .)
    IMPORT          reduce using rule 79 (else_clause -> ELSE block .)
    LBRACKET        reduce using rule 79 (else_clause -> ELSE block .)
    MINUS           reduce using rule 79 (else_clause -> ELSE block .)
    LPAREN          reduce using rule 79 (else_clause -> ELSE block .)
    NUMBER          reduce using rule 79 (else_clause -> ELSE block .)
    STRING          reduce using rule 79 (else_clause -> ELSE block .)
    IDENTIFIER      reduce using rule 79 (else_clause -> ELSE block .)
    AT              reduce using rule 79 (else_clause -> ELSE block .)
    $end            reduce using rule 79 (else_clause -> ELSE block .)
    RBRACE          reduce using rule 79 (else_clause -> ELSE block .)


state 202

    (75) block -> LBRACE statements RBRACE .

    ELSE            reduce using rule 75 (block -> LBRACE statements RBRACE .)
    LET             reduce using rule 75 (block -> LBRACE statements RBRACE .)
    MUT             reduce using rule 75 (block -> LBRACE statements RBRACE .)
    CONST           reduce using rule 75 (block -> LBRACE statements RBRACE .)
    FN              reduce using rule 75 (block -> LBRACE statements RBRACE .)
    STRUCT          reduce using rule 75 (block -> LBRACE statements RBRACE .)
    ENUM            reduce using rule 75 (block -> LBRACE statements RBRACE .)
    PRINT           reduce using rule 75 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 75 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 75 (block -> LBRACE statements RBRACE .)
    MATCH           reduce using rule 75 (block -> LBRACE statements RBRACE .)
    IMPORT          reduce using rule 75 (block -> LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 75 (block -> LBRACE statements RBRACE .)
    MINUS           reduce using rule 75 (block -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 75 (block -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 75 (block -> LBRACE statements RBRACE .)
    STRING          reduce using rule 75 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 75 (block -> LBRACE statements RBRACE .)
    AT              reduce using rule 75 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 75 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 75 (block -> LBRACE statements RBRACE .)


state 203

    (77) if_statement -> IF LPAREN expression RPAREN block . else_clause
    (78) else_clause -> . ELSE if_statement
    (79) else_clause -> . ELSE block
    (80) else_clause -> .

    ELSE            shift and go to state 162
    LET             reduce using rule 80 (else_clause -> .)
    MUT             reduce using rule 80 (else_clause -> .)
    CONST           reduce using rule 80 (else_clause -> .)
    FN              reduce using rule 80 (else_clause -> .)
    STRUCT          reduce using rule 80 (else_clause -> .)
    ENUM            reduce using rule 80 (else_clause -> .)
    PRINT           reduce using rule 80 (else_clause -> .)
    IF              reduce using rule 80 (else_clause -> .)
    RETURN          reduce using rule 80 (else_clause -> .)
    MATCH           reduce using rule 80 (else_clause -> .)
    IMPORT          reduce using rule 80 (else_clause -> .)
    LBRACKET        reduce using rule 80 (else_clause -> .)
    MINUS           reduce using rule 80 (else_clause -> .)
    LPAREN          reduce using rule 80 (else_clause -> .)
    NUMBER          reduce using rule 80 (else_clause -> .)
    STRING          reduce using rule 80 (else_clause -> .)
    IDENTIFIER      reduce using rule 80 (else_clause -> .)
    AT              reduce using rule 80 (else_clause -> .)
    $end            reduce using rule 80 (else_clause -> .)
    RBRACE          reduce using rule 80 (else_clause -> .)

    else_clause                    shift and go to state 230

state 204

    (16) match_statement -> MATCH expression LBRACE match_arms RBRACE .

    LET             reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    MUT             reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    CONST           reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    FN              reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    STRUCT          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    ENUM            reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    PRINT           reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    IF              reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    RETURN          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    MATCH           reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    IMPORT          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    LBRACKET        reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    MINUS           reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    LPAREN          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    NUMBER          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    STRING          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    IDENTIFIER      reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    AT              reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    $end            reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)
    RBRACE          reduce using rule 16 (match_statement -> MATCH expression LBRACE match_arms RBRACE .)


state 205

    (18) match_arms -> match_arm_list maybe_comma .

    RBRACE          reduce using rule 18 (match_arms -> match_arm_list maybe_comma .)


state 206

    (20) match_arm_list -> match_arm_list COMMA . match_arm
    (21) maybe_comma -> COMMA .
    (23) match_arm -> . pattern ARROW inline_statement
    (27) pattern -> . MINUS NUMBER
    (28) pattern -> . NUMBER
    (29) pattern -> . UNDERSCORE

    RBRACE          reduce using rule 21 (maybe_comma -> COMMA .)
    MINUS           shift and go to state 169
    NUMBER          shift and go to state 170
    UNDERSCORE      shift and go to state 171

    match_arm                      shift and go to state 231
    pattern                        shift and go to state 168

state 207

    (22) maybe_comma -> empty .

    RBRACE          reduce using rule 22 (maybe_comma -> empty .)


state 208

    (23) match_arm -> pattern ARROW . inline_statement
    (24) inline_statement -> . PRINT DOT INFO LPAREN expression RPAREN
    (25) inline_statement -> . assignment_expression
    (26) inline_statement -> . expression
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    PRINT           shift and go to state 233
    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17

    inline_statement               shift and go to state 232
    expression                     shift and go to state 234
    assignment_expression          shift and go to state 235
    lvalue                         shift and go to state 34

state 209

    (27) pattern -> MINUS NUMBER .

    ARROW           reduce using rule 27 (pattern -> MINUS NUMBER .)


state 210

    (71) import_statement -> IMPORT LBRACE import_items RBRACE FROM . STRING SEMICOLON

    STRING          shift and go to state 236


state 211

    (72) import_items -> import_items COMMA IDENTIFIER .

    RBRACE          reduce using rule 72 (import_items -> import_items COMMA IDENTIFIER .)
    COMMA           reduce using rule 72 (import_items -> import_items COMMA IDENTIFIER .)


state 212

    (60) variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN . expression SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 237

state 213

    (61) variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .

    LET             reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    MUT             reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    FN              reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    STRUCT          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    ENUM            reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    MATCH           reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    IMPORT          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    AT              reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 61 (variable_declaration -> LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON .)


state 214

    (62) variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 238
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 215

    (98) type_list -> type .
    (96) type -> type . LT type_list GT

    GT              reduce using rule 98 (type_list -> type .)
    COMMA           reduce using rule 98 (type_list -> type .)
    LT              shift and go to state 179


state 216

    (96) type -> type LT type_list . GT
    (97) type_list -> type_list . COMMA type

    GT              shift and go to state 239
    COMMA           shift and go to state 240


state 217

    (59) constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN . expression SEMICOLON
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 241

state 218

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN . ARROW type LBRACE statements RBRACE
    (67) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN . LBRACE statements RBRACE

    ARROW           shift and go to state 242
    LBRACE          shift and go to state 243


state 219

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW . type LBRACE statements RBRACE
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 244

state 220

    (69) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statements                     shift and go to state 245
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 221

    (86) expression -> FN LPAREN parameters RPAREN ARROW type . LBRACE statements RBRACE
    (96) type -> type . LT type_list GT

    LBRACE          shift and go to state 246
    LT              shift and go to state 179


state 222

    (87) expression -> FN LPAREN parameters RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 247
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 223

    (44) mut_field_declaration -> MUT LET IDENTIFIER . ARROW type SEMICOLON

    ARROW           shift and go to state 248


state 224

    (45) field_declaration -> LET IDENTIFIER ARROW . type SEMICOLON
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 249

state 225

    (42) method_declaration -> decorators FN IDENTIFIER . LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE

    LPAREN          shift and go to state 250


state 226

    (43) method_declaration -> FN IDENTIFIER LPAREN . parameters RPAREN ARROW type LBRACE statements RBRACE
    (89) parameters -> . parameters COMMA parameter
    (90) parameters -> . parameters COMMA
    (91) parameters -> . parameter
    (92) parameters -> .
    (93) parameter -> . IDENTIFIER ARROW type
    (94) parameter -> . IDENTIFIER

    RPAREN          reduce using rule 92 (parameters -> .)
    COMMA           reduce using rule 92 (parameters -> .)
    IDENTIFIER      shift and go to state 110

    parameters                     shift and go to state 251
    parameter                      shift and go to state 109

state 227

    (54) enum_variant -> IDENTIFIER LBRACE struct_members . RBRACE
    (37) struct_members -> struct_members . struct_member
    (39) struct_member -> . mut_field_declaration
    (40) struct_member -> . field_declaration
    (41) struct_member -> . method_declaration
    (44) mut_field_declaration -> . MUT LET IDENTIFIER ARROW type SEMICOLON
    (45) field_declaration -> . LET IDENTIFIER ARROW type SEMICOLON
    (42) method_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (43) method_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (58) decorator -> . AT IDENTIFIER

    RBRACE          shift and go to state 252
    MUT             shift and go to state 150
    LET             shift and go to state 151
    FN              shift and go to state 153
    AT              shift and go to state 38

    struct_member                  shift and go to state 189
    mut_field_declaration          shift and go to state 147
    field_declaration              shift and go to state 148
    method_declaration             shift and go to state 149
    decorators                     shift and go to state 152
    decorator                      shift and go to state 33

state 228

    (51) enum_variant_list -> enum_variant_list COMMA enum_variant .

    COMMA           reduce using rule 51 (enum_variant_list -> enum_variant_list COMMA enum_variant .)
    RBRACE          reduce using rule 51 (enum_variant_list -> enum_variant_list COMMA enum_variant .)


state 229

    (70) print_statement -> PRINT DOT INFO LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 253


state 230

    (77) if_statement -> IF LPAREN expression RPAREN block else_clause .

    LET             reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    MUT             reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    CONST           reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    FN              reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    STRUCT          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    ENUM            reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    PRINT           reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    IF              reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    RETURN          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    MATCH           reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    IMPORT          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    LBRACKET        reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    MINUS           reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    LPAREN          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    NUMBER          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    STRING          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    IDENTIFIER      reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    AT              reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    $end            reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)
    RBRACE          reduce using rule 77 (if_statement -> IF LPAREN expression RPAREN block else_clause .)


state 231

    (20) match_arm_list -> match_arm_list COMMA match_arm .

    COMMA           reduce using rule 20 (match_arm_list -> match_arm_list COMMA match_arm .)
    RBRACE          reduce using rule 20 (match_arm_list -> match_arm_list COMMA match_arm .)


state 232

    (23) match_arm -> pattern ARROW inline_statement .

    COMMA           reduce using rule 23 (match_arm -> pattern ARROW inline_statement .)
    RBRACE          reduce using rule 23 (match_arm -> pattern ARROW inline_statement .)


state 233

    (24) inline_statement -> PRINT . DOT INFO LPAREN expression RPAREN

    DOT             shift and go to state 254


state 234

    (26) inline_statement -> expression .
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER
    (85) lvalue -> expression . DOT IDENTIFIER

    COMMA           reduce using rule 26 (inline_statement -> expression .)
    RBRACE          reduce using rule 26 (inline_statement -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 57


state 235

    (25) inline_statement -> assignment_expression .

    COMMA           reduce using rule 25 (inline_statement -> assignment_expression .)
    RBRACE          reduce using rule 25 (inline_statement -> assignment_expression .)


state 236

    (71) import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING . SEMICOLON

    SEMICOLON       shift and go to state 255


state 237

    (60) variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 256
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 238

    (62) variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .

    LET             reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MUT             reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    FN              reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    STRUCT          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    ENUM            reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IF              reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MATCH           reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IMPORT          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    AT              reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    $end            reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 62 (variable_declaration -> MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)


state 239

    (96) type -> type LT type_list GT .

    ASSIGN          reduce using rule 96 (type -> type LT type_list GT .)
    LT              reduce using rule 96 (type -> type LT type_list GT .)
    RPAREN          reduce using rule 96 (type -> type LT type_list GT .)
    COMMA           reduce using rule 96 (type -> type LT type_list GT .)
    GT              reduce using rule 96 (type -> type LT type_list GT .)
    LBRACE          reduce using rule 96 (type -> type LT type_list GT .)
    SEMICOLON       reduce using rule 96 (type -> type LT type_list GT .)


state 240

    (97) type_list -> type_list COMMA . type
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 257

state 241

    (59) constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression . SEMICOLON
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    SEMICOLON       shift and go to state 258
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 242

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW . type LBRACE statements RBRACE
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 259

state 243

    (67) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    decorators                     shift and go to state 21
    statements                     shift and go to state 260
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 244

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type . LBRACE statements RBRACE
    (96) type -> type . LT type_list GT

    LBRACE          shift and go to state 261
    LT              shift and go to state 179


state 245

    (69) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 262
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 246

    (86) expression -> FN LPAREN parameters RPAREN ARROW type LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statements                     shift and go to state 263
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 247

    (87) expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .

    SEMICOLON       reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MULTIPLY        reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LT              reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    GT              reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LEQ             reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    GEQ             reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    EQ              reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NEQ             reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    DOT             reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RPAREN          reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LBRACE          reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACKET        reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    COMMA           reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 87 (expression -> FN LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 248

    (44) mut_field_declaration -> MUT LET IDENTIFIER ARROW . type SEMICOLON
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 264

state 249

    (45) field_declaration -> LET IDENTIFIER ARROW type . SEMICOLON
    (96) type -> type . LT type_list GT

    SEMICOLON       shift and go to state 265
    LT              shift and go to state 179


state 250

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN . parameters RPAREN ARROW type LBRACE statements RBRACE
    (89) parameters -> . parameters COMMA parameter
    (90) parameters -> . parameters COMMA
    (91) parameters -> . parameter
    (92) parameters -> .
    (93) parameter -> . IDENTIFIER ARROW type
    (94) parameter -> . IDENTIFIER

    RPAREN          reduce using rule 92 (parameters -> .)
    COMMA           reduce using rule 92 (parameters -> .)
    IDENTIFIER      shift and go to state 110

    parameters                     shift and go to state 266
    parameter                      shift and go to state 109

state 251

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters . RPAREN ARROW type LBRACE statements RBRACE
    (89) parameters -> parameters . COMMA parameter
    (90) parameters -> parameters . COMMA

    RPAREN          shift and go to state 267
    COMMA           shift and go to state 142


state 252

    (54) enum_variant -> IDENTIFIER LBRACE struct_members RBRACE .

    COMMA           reduce using rule 54 (enum_variant -> IDENTIFIER LBRACE struct_members RBRACE .)
    RBRACE          reduce using rule 54 (enum_variant -> IDENTIFIER LBRACE struct_members RBRACE .)


state 253

    (70) print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .

    LET             reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    MUT             reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    CONST           reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    FN              reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    STRUCT          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    ENUM            reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    MATCH           reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    IMPORT          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    AT              reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (print_statement -> PRINT DOT INFO LPAREN expression RPAREN SEMICOLON .)


state 254

    (24) inline_statement -> PRINT DOT . INFO LPAREN expression RPAREN

    INFO            shift and go to state 268


state 255

    (71) import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .

    LET             reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    MUT             reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    CONST           reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    FN              reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    STRUCT          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    ENUM            reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    PRINT           reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    IF              reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    RETURN          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    MATCH           reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    IMPORT          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    LBRACKET        reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    MINUS           reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    LPAREN          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    NUMBER          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    STRING          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    AT              reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    $end            reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)
    RBRACE          reduce using rule 71 (import_statement -> IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON .)


state 256

    (60) variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .

    LET             reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MUT             reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    FN              reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    STRUCT          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    ENUM            reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IF              reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MATCH           reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IMPORT          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    AT              reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    $end            reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 60 (variable_declaration -> LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)


state 257

    (97) type_list -> type_list COMMA type .
    (96) type -> type . LT type_list GT

    GT              reduce using rule 97 (type_list -> type_list COMMA type .)
    COMMA           reduce using rule 97 (type_list -> type_list COMMA type .)
    LT              shift and go to state 179


state 258

    (59) constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .

    LET             reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MUT             reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    FN              reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    STRUCT          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    ENUM            reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IF              reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MATCH           reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IMPORT          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    AT              reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    $end            reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 59 (constant_declaration -> CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON .)


state 259

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type . LBRACE statements RBRACE
    (96) type -> type . LT type_list GT

    LBRACE          shift and go to state 269
    LT              shift and go to state 179


state 260

    (67) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 270
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    decorators                     shift and go to state 21
    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 261

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statements                     shift and go to state 271
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 262

    (69) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    LET             reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MUT             reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CONST           reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FN              reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STRUCT          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ENUM            reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MATCH           reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IMPORT          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    AT              reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 69 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 263

    (86) expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 272
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 264

    (44) mut_field_declaration -> MUT LET IDENTIFIER ARROW type . SEMICOLON
    (96) type -> type . LT type_list GT

    SEMICOLON       shift and go to state 273
    LT              shift and go to state 179


state 265

    (45) field_declaration -> LET IDENTIFIER ARROW type SEMICOLON .

    RBRACE          reduce using rule 45 (field_declaration -> LET IDENTIFIER ARROW type SEMICOLON .)
    MUT             reduce using rule 45 (field_declaration -> LET IDENTIFIER ARROW type SEMICOLON .)
    LET             reduce using rule 45 (field_declaration -> LET IDENTIFIER ARROW type SEMICOLON .)
    FN              reduce using rule 45 (field_declaration -> LET IDENTIFIER ARROW type SEMICOLON .)
    AT              reduce using rule 45 (field_declaration -> LET IDENTIFIER ARROW type SEMICOLON .)


state 266

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters . RPAREN ARROW type LBRACE statements RBRACE
    (89) parameters -> parameters . COMMA parameter
    (90) parameters -> parameters . COMMA

    RPAREN          shift and go to state 274
    COMMA           shift and go to state 142


state 267

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN . ARROW type LBRACE statements RBRACE

    ARROW           shift and go to state 275


state 268

    (24) inline_statement -> PRINT DOT INFO . LPAREN expression RPAREN

    LPAREN          shift and go to state 276


state 269

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    decorators                     shift and go to state 21
    statements                     shift and go to state 277
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 270

    (67) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .

    LET             reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MUT             reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    CONST           reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FN              reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STRUCT          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ENUM            reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MATCH           reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IMPORT          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    AT              reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 67 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 271

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 278
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 272

    (86) expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .

    SEMICOLON       reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    PLUS            reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MINUS           reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MULTIPLY        reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LT              reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    GT              reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LEQ             reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    GEQ             reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    EQ              reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    NEQ             reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    AND             reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    OR              reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LPAREN          reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    DOT             reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RPAREN          reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LBRACE          reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RBRACKET        reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    COMMA           reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RBRACE          reduce using rule 86 (expression -> FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)


state 273

    (44) mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON .

    RBRACE          reduce using rule 44 (mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON .)
    MUT             reduce using rule 44 (mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON .)
    LET             reduce using rule 44 (mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON .)
    FN              reduce using rule 44 (mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON .)
    AT              reduce using rule 44 (mut_field_declaration -> MUT LET IDENTIFIER ARROW type SEMICOLON .)


state 274

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN . ARROW type LBRACE statements RBRACE

    ARROW           shift and go to state 279


state 275

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW . type LBRACE statements RBRACE
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 280

state 276

    (24) inline_statement -> PRINT DOT INFO LPAREN . expression RPAREN
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER

    FN              shift and go to state 65
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 66

    expression                     shift and go to state 281

state 277

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 282
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    decorators                     shift and go to state 21
    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 278

    (68) function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .

    LET             reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MUT             reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    CONST           reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    FN              reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    STRUCT          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    ENUM            reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    PRINT           reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    IF              reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RETURN          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MATCH           reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    IMPORT          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MINUS           reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LPAREN          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    NUMBER          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    STRING          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    AT              reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    $end            reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RBRACE          reduce using rule 68 (function_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)


state 279

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW . type LBRACE statements RBRACE
    (95) type -> . IDENTIFIER
    (96) type -> . type LT type_list GT

    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 283

state 280

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type . LBRACE statements RBRACE
    (96) type -> type . LT type_list GT

    LBRACE          shift and go to state 284
    LT              shift and go to state 179


state 281

    (24) inline_statement -> PRINT DOT INFO LPAREN expression . RPAREN
    (104) expression -> expression . PLUS expression
    (105) expression -> expression . MINUS expression
    (106) expression -> expression . MULTIPLY expression
    (107) expression -> expression . DIVIDE expression
    (108) expression -> expression . LT expression
    (109) expression -> expression . GT expression
    (110) expression -> expression . LEQ expression
    (111) expression -> expression . GEQ expression
    (112) expression -> expression . EQ expression
    (113) expression -> expression . NEQ expression
    (114) expression -> expression . AND expression
    (115) expression -> expression . OR expression
    (122) expression -> expression . LPAREN arguments RPAREN
    (123) expression -> expression . DOT IDENTIFIER

    RPAREN          shift and go to state 285
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 46
    DIVIDE          shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LEQ             shift and go to state 50
    GEQ             shift and go to state 51
    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    AND             shift and go to state 54
    OR              shift and go to state 55
    LPAREN          shift and go to state 56
    DOT             shift and go to state 112


state 282

    (66) function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .

    LET             reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MUT             reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    CONST           reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    FN              reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    STRUCT          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    ENUM            reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    PRINT           reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    IF              reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RETURN          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MATCH           reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    IMPORT          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LBRACKET        reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MINUS           reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LPAREN          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    NUMBER          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    STRING          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    AT              reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    $end            reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    RBRACE          reduce using rule 66 (function_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)


state 283

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type . LBRACE statements RBRACE
    (96) type -> type . LT type_list GT

    LBRACE          shift and go to state 286
    LT              shift and go to state 179


state 284

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statements                     shift and go to state 287
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 285

    (24) inline_statement -> PRINT DOT INFO LPAREN expression RPAREN .

    COMMA           reduce using rule 24 (inline_statement -> PRINT DOT INFO LPAREN expression RPAREN .)
    RBRACE          reduce using rule 24 (inline_statement -> PRINT DOT INFO LPAREN expression RPAREN .)


state 286

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    decorators                     shift and go to state 21
    statements                     shift and go to state 288
    statement                      shift and go to state 3
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 287

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 289
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    decorators                     shift and go to state 21
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 288

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . variable_declaration
    (5) statement -> . constant_declaration
    (6) statement -> . function_declaration
    (7) statement -> . struct_declaration
    (8) statement -> . enum_declaration
    (9) statement -> . print_statement
    (10) statement -> . if_statement
    (11) statement -> . return_statement
    (12) statement -> . assignment
    (13) statement -> . expression_statement
    (14) statement -> . match_statement
    (15) statement -> . import_statement
    (60) variable_declaration -> . LET mut_opt IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (61) variable_declaration -> . LET mut_opt IDENTIFIER ASSIGN expression SEMICOLON
    (62) variable_declaration -> . MUT IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (63) variable_declaration -> . MUT IDENTIFIER ASSIGN expression SEMICOLON
    (59) constant_declaration -> . CONST LET IDENTIFIER ARROW type ASSIGN expression SEMICOLON
    (66) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (67) function_declaration -> . decorators FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (68) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (69) function_declaration -> . FN IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE
    (36) struct_declaration -> . STRUCT IDENTIFIER LBRACE struct_members RBRACE
    (46) enum_declaration -> . ENUM IDENTIFIER LBRACE enum_variants_opt RBRACE
    (70) print_statement -> . PRINT DOT INFO LPAREN expression RPAREN SEMICOLON
    (76) if_statement -> . IF expression block else_clause
    (77) if_statement -> . IF LPAREN expression RPAREN block else_clause
    (81) return_statement -> . RETURN expression SEMICOLON
    (82) return_statement -> . RETURN SEMICOLON
    (83) assignment -> . assignment_expression SEMICOLON
    (88) expression_statement -> . expression SEMICOLON
    (16) match_statement -> . MATCH expression LBRACE match_arms RBRACE
    (71) import_statement -> . IMPORT LBRACE import_items RBRACE FROM STRING SEMICOLON
    (56) decorators -> . decorators decorator
    (57) decorators -> . decorator
    (30) assignment_expression -> . lvalue ASSIGN expression
    (31) assignment_expression -> . lvalue PLUS_ASSIGN expression
    (32) assignment_expression -> . lvalue MINUS_ASSIGN expression
    (33) assignment_expression -> . lvalue MULTIPLY_ASSIGN expression
    (34) assignment_expression -> . lvalue DIVIDE_ASSIGN expression
    (86) expression -> . FN LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE
    (87) expression -> . FN LPAREN parameters RPAREN LBRACE statements RBRACE
    (99) expression -> . LBRACKET elements RBRACKET
    (104) expression -> . expression PLUS expression
    (105) expression -> . expression MINUS expression
    (106) expression -> . expression MULTIPLY expression
    (107) expression -> . expression DIVIDE expression
    (108) expression -> . expression LT expression
    (109) expression -> . expression GT expression
    (110) expression -> . expression LEQ expression
    (111) expression -> . expression GEQ expression
    (112) expression -> . expression EQ expression
    (113) expression -> . expression NEQ expression
    (114) expression -> . expression AND expression
    (115) expression -> . expression OR expression
    (116) expression -> . MINUS expression
    (117) expression -> . LPAREN expression RPAREN
    (118) expression -> . NUMBER
    (119) expression -> . STRING
    (120) expression -> . IDENTIFIER
    (121) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (122) expression -> . expression LPAREN arguments RPAREN
    (123) expression -> . expression DOT IDENTIFIER
    (58) decorator -> . AT IDENTIFIER
    (84) lvalue -> . IDENTIFIER
    (85) lvalue -> . expression DOT IDENTIFIER

    RBRACE          shift and go to state 290
    LET             shift and go to state 16
    MUT             shift and go to state 19
    CONST           shift and go to state 20
    FN              shift and go to state 22
    STRUCT          shift and go to state 24
    ENUM            shift and go to state 25
    PRINT           shift and go to state 26
    IF              shift and go to state 27
    RETURN          shift and go to state 28
    MATCH           shift and go to state 30
    IMPORT          shift and go to state 31
    LBRACKET        shift and go to state 35
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 37
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 17
    AT              shift and go to state 38

    decorators                     shift and go to state 21
    statement                      shift and go to state 39
    variable_declaration           shift and go to state 4
    constant_declaration           shift and go to state 5
    function_declaration           shift and go to state 6
    struct_declaration             shift and go to state 7
    enum_declaration               shift and go to state 8
    print_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    return_statement               shift and go to state 11
    assignment                     shift and go to state 12
    expression_statement           shift and go to state 13
    match_statement                shift and go to state 14
    import_statement               shift and go to state 15
    expression                     shift and go to state 18
    assignment_expression          shift and go to state 29
    decorator                      shift and go to state 33
    lvalue                         shift and go to state 34

state 289

    (43) method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .

    RBRACE          reduce using rule 43 (method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MUT             reduce using rule 43 (method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LET             reduce using rule 43 (method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    FN              reduce using rule 43 (method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    AT              reduce using rule 43 (method_declaration -> FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)


state 290

    (42) method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .

    RBRACE          reduce using rule 42 (method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    MUT             reduce using rule 42 (method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    LET             reduce using rule 42 (method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    FN              reduce using rule 42 (method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)
    AT              reduce using rule 42 (method_declaration -> decorators FN IDENTIFIER LPAREN parameters RPAREN ARROW type LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 66 resolved as shift
