// examples/types/recursive-types.sfn

struct TreeNode {
    value: number;
    left: TreeNode?;
    right: TreeNode?;
}

fn traverse(node: TreeNode?) -> void {
    if node == null { return; }
    traverse(node.left);
    print.info("{{node.value}}");
    traverse(node.right);
}

fn main() -> void {
    let root: TreeNode = new TreeNode {
        value: 10,
        left: new TreeNode { value: 5, left: null, right: null },
        right: new TreeNode { value: 15, left: null, right: null }
    };

    traverse(root);
}
