// Test generic structures code generation
struct List<T> {
    items: T[];

    fn add(self, item: T) -> void {
        self.items.append(item);
    }

    fn get(self, index: number) -> T? {
        if (index < 0 || index >= self.items.length) {
            return null;
        }
        return self.items[index];
    }
}

struct Pair<A, B> {
    first: A;
    second: B;
    
    fn swap(self) -> Pair<B, A> {
        return Pair<B, A>{ first: self.second, second: self.first };
    }
}
