// examples/advanced/interface-polymorphism.sfn

interface Driveable {
    fn drive(self) -> string; // All Driveable types must implement this method
}

struct Car implements Driveable {
    brand: string;

    fn create(brand: string) -> Car {
        return new Car { brand: brand };
    }

    fn drive(self) -> string {
        return "Driving a {{self.brand}} car.";
    }
}

struct Bike implements Driveable {
    brand: string;

    fn create(brand: string) -> Bike {
        return new Bike { brand: brand };
    }

    fn drive(self) -> string {
        return "Riding a {{self.brand}} bike.";
    }
}

fn main() -> void {
    let car: Car = new Car { brand: "Tesla" };
    let bike: Bike = new Bike { brand: "Yamaha" };

    print.info(car.drive()); // Outputs: Driving a Tesla car.
    print.info(bike.drive()); // Outputs: Riding a Yamaha bike.
}
