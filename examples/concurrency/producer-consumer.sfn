// examples/concurrency/producer-consumer.sfn

import { Channel, channel } from "sail/async";
import { sleep } from "sail/time";

fn main() {
    let buffer -> Channel<number> = channel(10); // bounded buffer

    routine {
        for i in 1..20 {
            print.info("Producing {{i}}");
            buffer.send(i);
            sleep(500);
        }
    }

    routine {
        loop {
            let item = await buffer.receive();
            print.info("Consumed {{item}}");
            sleep(1000);
        }
    }
}
