// examples/concurrency/dynamic-task-scheduling.sfn

import { Channel, channel } from "sail/async";

fn main() {
    let tasks -> Channel<fn() -> void> = channel();

    for _ in 1..5 {
        routine {
            loop {
                let task = await tasks.receive();
                task();
            }
        }
    }

    tasks.send(fn() { print.info("Task 1 executed!"); });
    tasks.send(fn() { print.info("Task 2 executed!"); });
}
