name: Sailfin Self-Hosting CI

on:
  push:
    branches: [main, alpha, beta, rc]
  pull_request:
    branches: [main]

jobs:
  # Build Self-Hosting Compiler
  build-selfhosting:
    runs-on: ubuntu-latest
    outputs:
      compiler-path: ${{ steps.build.outputs.compiler-path }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
        working-directory: bootstrap

      - name: Install Bootstrap Dependencies
        run: |
          poetry install --no-interaction --no-ansi
        working-directory: bootstrap

      - name: Build Self-Hosting Compiler
        id: build
        run: |
          chmod +x build-self-hosting-new.sh
          ./build-self-hosting-new.sh compiler
          echo "compiler-path=${{ github.workspace }}/build/sfn" >> $GITHUB_OUTPUT

      - name: Test Self-Hosting Compiler
        run: |
          # Test that the compiler works
          ./build/sfn examples/basics/hello-world.sfn > test_output.py
          echo "✅ Self-hosting compiler built and tested successfully!"

      - name: Upload Compiler Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sailfin-compiler
          path: |
            build/sfn
            build/sfn_compiler.py
          retention-days: 7

  # Test All Examples with Self-Hosting Compiler
  test-examples:
    runs-on: ubuntu-latest
    needs: build-selfhosting

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
        working-directory: bootstrap

      - name: Install Dependencies
        run: |
          poetry install --no-interaction --no-ansi
        working-directory: bootstrap

      - name: Download Compiler Artifact
        uses: actions/download-artifact@v4
        with:
          name: sailfin-compiler
          path: build/

      - name: Make Compiler Executable
        run: |
          chmod +x build/sfn

      - name: Test All Examples
        run: |
          echo "Testing all 69 examples with self-hosting compiler..."
          python test_all_examples.py
          echo "✅ All examples pass with self-hosting compiler!"
        working-directory: bootstrap

      - name: Verify Self-Hosting Capability
        run: |
          echo "Verifying self-hosting: compiler compiles itself..."
          ./build/sfn compiler/compiler.sfn > self_compiled.py
          echo "✅ Self-hosting verification successful!"

  # Cross-Platform Build Test
  test-cross-platform:
    runs-on: ${{ matrix.os }}
    needs: build-selfhosting
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry (Unix)
        if: runner.os != 'Windows'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
        working-directory: bootstrap

      - name: Install Dependencies
        run: |
          poetry install --no-interaction --no-ansi
        working-directory: bootstrap

      - name: Download Compiler Artifact
        uses: actions/download-artifact@v4
        with:
          name: sailfin-compiler
          path: build/

      - name: Make Compiler Executable (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x build/sfn

      - name: Test Self-Hosting Compiler on ${{ matrix.os }}
        run: |
          echo "Testing self-hosting compiler on ${{ matrix.os }}..."
          if [ "$RUNNER_OS" = "macOS" ]; then
            # Test compilation on macOS
            ./build/sfn examples/basics/hello-world.sfn > test_macos.py
            echo "✅ Compiler works on macOS"
          else
            # Test compilation on Linux
            ./build/sfn examples/basics/hello-world.sfn > test_linux.py
            echo "✅ Compiler works on Linux"
          fi

  # Performance Benchmark
  benchmark:
    runs-on: ubuntu-latest
    needs: build-selfhosting

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
        working-directory: bootstrap

      - name: Install Dependencies
        run: |
          poetry install --no-interaction --no-ansi
        working-directory: bootstrap

      - name: Download Compiler Artifact
        uses: actions/download-artifact@v4
        with:
          name: sailfin-compiler
          path: build/

      - name: Make Compiler Executable
        run: |
          chmod +x build/sfn

      - name: Performance Benchmark
        run: |
          echo "Running performance benchmarks..."

          # Benchmark self-hosting compiler vs bootstrap
          echo "Benchmarking compilation time..."

          # Test with a larger example
          time ./build/sfn examples/advanced/matrix-multiplication.sfn > selfhost_result.py
          time python bootstrap.py ../examples/advanced/matrix-multiplication.sfn -o bootstrap_result.py

          echo "✅ Performance benchmark completed"
        working-directory: bootstrap

  # Security Scan
  security:
    runs-on: ubuntu-latest
    needs: build-selfhosting

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Compiler Artifact
        uses: actions/download-artifact@v4
        with:
          name: sailfin-compiler
          path: build/

      - name: Security Scan
        run: |
          echo "Running security scan on self-hosting compiler..."

          # Check for common security issues
          if command -v bandit &> /dev/null; then
            bandit -r build/sfn_compiler.py || true
          fi

          # Check file permissions
          ls -la build/

          echo "✅ Security scan completed"
